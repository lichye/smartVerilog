strict digraph "compose( ,  )" {
	node [label="\N"];
	"504:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009ca10>",
		def_var="['csr_pipe_flush']",
		fillcolor=deepskyblue,
		label="504:AS
csr_pipe_flush = csr_pipe_flush_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr_pipe_flush_i', 'instr_valid_i']"];
	"550:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f41afe0d910>",
		clk_sens=False,
		fillcolor=gold,
		label="550:AL",
		sens="['sv2v_cast_89EA8', 'DBG_CAUSE_STEP', 'EXC_PC_DBG_EXC', 'EXC_CAUSE_BREAKPOINT', 'EXC_CAUSE_IRQ_TIMER_M', 'EXC_CAUSE_STORE_ACCESS_\
FAULT', 'EXC_PC_EXC', 'EXC_CAUSE_IRQ_NM', 'instr_compressed_i', 'PC_JUMP', 'mfip_id', 'DBG_TAKEN_ID', 'instr_i', 'EXC_CAUSE_ECALL_\
MMODE', 'branch_set_i', 'EXC_CAUSE_LOAD_ACCESS_FAULT', 'EXC_CAUSE_IRQ_EXTERNAL_M', 'DBG_CAUSE_HALTREQ', 'DECODE', 'EXC_PC_IRQ', '\
EXC_CAUSE_INSTR_ACCESS_FAULT', 'BOOT_SET', 'PRIV_LVL_M', 'EXC_CAUSE_ECALL_UMODE', 'debug_mode_q', 'DBG_CAUSE_EBREAK', 'PC_BOOT', '\
lsu_addr_last_i', 'DBG_TAKEN_IF', 'PC_DRET', 'IRQ_TAKEN', 'pc_id_i', 'ctrl_fsm_cs', 'nmi_mode_q', 'instr_is_compressed_i', 'EXC_\
CAUSE_IRQ_SOFTWARE_M', 'jump_set_i', 'FIRST_FETCH', 'WAIT_SLEEP', 'priv_mode_i', 'PC_EXC', 'EXC_PC_DBD', 'PC_ERET', 'SLEEP', 'FLUSH', '\
EXC_CAUSE_INSN_ADDR_MISA', 'EXC_CAUSE_ILLEGAL_INSN']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['irq_pending_i', 'sv2v_cast_89EA8', 'csr_pipe_flush', 'handle_irq', 'DBG_CAUSE_STEP', 'EXC_CAUSE_IRQ_NM', 'EXC_CAUSE_BREAKPOINT', '\
EXC_CAUSE_IRQ_TIMER_M', 'enter_debug_mode', 'nmi_mode_q', 'EXC_PC_EXC', 'debug_single_step_i', 'EXC_PC_DBG_EXC', 'instr_compressed_\
i', 'PC_JUMP', 'mret_insn', 'PC_BOOT', 'id_in_ready_o', 'mfip_id', 'irq_nm_i', 'DBG_TAKEN_ID', 'instr_fetch_err', 'instr_i', 'EXC_\
CAUSE_ECALL_MMODE', 'branch_set_i', 'EXC_CAUSE_LOAD_ACCESS_FAULT', 'EXC_CAUSE_IRQ_EXTERNAL_M', 'DBG_CAUSE_HALTREQ', 'DECODE', 'EXC_\
PC_IRQ', 'EXC_CAUSE_INSTR_ACCESS_FAULT', 'BOOT_SET', 'PRIV_LVL_M', 'csr_mfip_i', 'exc_req_q', 'debug_req_i', 'debug_mode_q', 'DBG_\
CAUSE_EBREAK', 'illegal_insn_q', 'lsu_addr_last_i', 'DBG_TAKEN_IF', 'PC_DRET', 'csr_msip_i', 'dret_insn', 'instr_valid_i', 'pc_id_\
i', 'PC_ERET', 'ctrl_fsm_cs', 'FLUSH', 'fetch_enable_i', 'special_req', 'EXC_CAUSE_STORE_ACCESS_FAULT', 'ebrk_insn', 'instr_is_compressed_\
i', 'EXC_CAUSE_IRQ_SOFTWARE_M', 'csr_meip_i', 'store_err_q', 'ebreak_into_debug', 'jump_set_i', 'FIRST_FETCH', 'WAIT_SLEEP', 'load_\
err_q', 'priv_mode_i', 'wfi_insn', 'PC_EXC', 'EXC_PC_DBD', 'ecall_insn', 'stall', 'SLEEP', 'EXC_CAUSE_ECALL_UMODE', 'IRQ_TAKEN', '\
EXC_CAUSE_INSN_ADDR_MISA', 'EXC_CAUSE_ILLEGAL_INSN']"];
	"504:AS" -> "550:AL";
	"511:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afdf0210>",
		def_var="['special_req']",
		fillcolor=deepskyblue,
		label="511:AS
special_req = mret_insn | dret_insn | wfi_insn | csr_pipe_flush | exc_req_d | exc_req_lsu;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mret_insn', 'dret_insn', 'wfi_insn', 'csr_pipe_flush', 'exc_req_d', 'exc_req_lsu']"];
	"504:AS" -> "511:AS";
	"526:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe1a1d0>",
		fillcolor=springgreen,
		label="526:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"528:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe1a4d0>",
		fillcolor=springgreen,
		label="528:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"526:IF" -> "528:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[9])",
		lineno=526];
	"527:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a210>",
		fillcolor=cadetblue,
		label="527:BS
mfip_id = 4'd9;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a210>]",
		style=filled,
		typ=BlockingSubstitution];
	"526:IF" -> "527:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[9]",
		lineno=526];
	"509:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afe22c50>",
		def_var="['exc_req_d']",
		fillcolor=deepskyblue,
		label="509:AS
exc_req_d = (ecall_insn | ebrk_insn | illegal_insn_d | instr_fetch_err) & (ctrl_fsm_cs != FLUSH);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ecall_insn', 'ebrk_insn', 'illegal_insn_d', 'instr_fetch_err', 'ctrl_fsm_cs', 'FLUSH']"];
	"764:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f41af911750>",
		clk_sens=True,
		fillcolor=gold,
		label="764:AL",
		sens="['clk_i', 'rst_ni']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['RESET', 'rst_ni', 'exc_req_d', 'nmi_mode_d', 'illegal_insn_d', 'ctrl_fsm_ns', 'load_err_d', 'debug_mode_d', 'store_err_d']"];
	"509:AS" -> "764:AL";
	"509:AS" -> "511:AS";
	"578:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15c50>",
		fillcolor=cadetblue,
		label="578:BS
ctrl_fsm_ns = BOOT_SET;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_550:AL"	 [def_var="['pc_set_o', 'csr_save_id_o', 'csr_mtval_o', 'halt_if', 'debug_cause_o', 'csr_restore_mret_id_o', 'perf_jump_o', 'exc_cause_o', '\
perf_tbranch_o', 'csr_save_if_o', 'instr_req_o', 'nmi_mode_d', 'ctrl_fsm_ns', 'debug_mode_d', 'csr_restore_dret_id_o', 'debug_csr_\
save_o', 'flush_id', 'ctrl_busy_o', 'pc_mux_o', 'csr_save_cause_o', 'exc_pc_mux_o']",
		label="Leaf_550:AL"];
	"578:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"605:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdfd810>",
		fillcolor=springgreen,
		label="605:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"605:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afdfdad0>",
		fillcolor=turquoise,
		label="605:BL
ctrl_fsm_ns = IRQ_TAKEN;
halt_if = 1'b1;
flush_id = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfdb10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfdc50>]",
		style=filled,
		typ=Block];
	"605:IF" -> "605:BL"	 [cond="['handle_irq']",
		label=handle_irq,
		lineno=605];
	"751:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af905b10>",
		fillcolor=springgreen,
		label="751:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"752:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901450>",
		fillcolor=cadetblue,
		label="752:BS
ctrl_fsm_ns = DBG_TAKEN_IF;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901450>]",
		style=filled,
		typ=BlockingSubstitution];
	"751:IF" -> "752:BS"	 [cond="['enter_debug_mode']",
		label=enter_debug_mode,
		lineno=751];
	"518:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe0d590>",
		fillcolor=springgreen,
		label="518:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"520:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe0d890>",
		fillcolor=springgreen,
		label="520:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"518:IF" -> "520:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[13])",
		lineno=518];
	"519:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d5d0>",
		fillcolor=cadetblue,
		label="519:BS
mfip_id = 4'd13;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d5d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"518:IF" -> "519:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[13]",
		lineno=518];
	"741:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af901190>",
		fillcolor=turquoise,
		label="741:BL
pc_mux_o = PC_DRET;
pc_set_o = 1'b1;
debug_mode_d = 1'b0;
csr_restore_dret_id_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922ed0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901050>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9011d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901350>]",
		style=filled,
		typ=Block];
	"741:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"610:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afdfde90>",
		fillcolor=turquoise,
		label="610:BL
ctrl_fsm_ns = DBG_TAKEN_IF;
halt_if = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfded0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90c050>]",
		style=filled,
		typ=Block];
	"610:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"754:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af901950>",
		fillcolor=turquoise,
		label="754:BL
instr_req_o = 1'b0;
ctrl_fsm_ns = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9019d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901b10>]",
		style=filled,
		typ=Block];
	"754:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"712:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f4590>",
		fillcolor=springgreen,
		label="712:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"714:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f4650>",
		fillcolor=springgreen,
		label="714:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"712:IF" -> "714:IF"	 [cond="['ecall_insn']",
		label="!(ecall_insn)",
		lineno=712];
	"713:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4510>",
		fillcolor=cadetblue,
		label="713:BS
exc_cause_o = (priv_mode_i == PRIV_LVL_M)? EXC_CAUSE_ECALL_MMODE : EXC_CAUSE_ECALL_UMODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4510>]",
		style=filled,
		typ=BlockingSubstitution];
	"712:IF" -> "713:BS"	 [cond="['ecall_insn']",
		label=ecall_insn,
		lineno=712];
	"748:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9015d0>",
		fillcolor=cadetblue,
		label="748:BS
ctrl_fsm_ns = WAIT_SLEEP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9015d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"748:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"Leaf_515:AL"	 [def_var="['mfip_id']",
		label="Leaf_515:AL"];
	"Leaf_515:AL" -> "550:AL";
	"764:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af911850>",
		fillcolor=turquoise,
		label="764:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"765:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af9102d0>",
		fillcolor=springgreen,
		label="765:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"764:BL" -> "765:IF"	 [cond="[]",
		lineno=None];
	"604:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd750>",
		fillcolor=cadetblue,
		label="604:BS
ctrl_fsm_ns = DECODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd750>]",
		style=filled,
		typ=BlockingSubstitution];
	"604:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"685:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af916d50>",
		fillcolor=springgreen,
		label="685:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"685:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af92d210>",
		fillcolor=turquoise,
		label="685:BL
csr_save_cause_o = 1'b1;
csr_save_id_o = 1'b1;
debug_csr_save_o = 1'b1;
debug_cause_o = DBG_CAUSE_EBREAK;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916f10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d0d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d250>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d410>]",
		style=filled,
		typ=Block];
	"685:IF" -> "685:BL"	 [cond="['ebreak_into_debug', 'debug_mode_q']",
		label="(ebreak_into_debug && !debug_mode_q)",
		lineno=685];
	"765:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af910090>",
		fillcolor=turquoise,
		label="765:BL
ctrl_fsm_cs <= RESET;
nmi_mode_q <= 1'b0;
debug_mode_q <= 1'b0;
load_err_q <= 1'b0;
store_err_q <= 1'b0;
exc_req_q <= 1'b0;
\
illegal_insn_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af911a10>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f41af911b50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af911cd0>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41af911e10>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af911f50>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41af9100d0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af910250>]",
		style=filled,
		typ=Block];
	"765:IF" -> "765:BL"	 [cond="['rst_ni']",
		label="(!rst_ni)",
		lineno=765];
	"774:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af910a90>",
		fillcolor=turquoise,
		label="774:BL
ctrl_fsm_cs <= ctrl_fsm_ns;
nmi_mode_q <= nmi_mode_d;
debug_mode_q <= debug_mode_d;
load_err_q <= load_err_d;
store_err_q <= \
store_err_d;
exc_req_q <= exc_req_d;
illegal_insn_q <= illegal_insn_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af910410>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f41af910550>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af910710>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41af910850>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af910990>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f41af910ad0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f41af910c90>]",
		style=filled,
		typ=Block];
	"765:IF" -> "774:BL"	 [cond="['rst_ni']",
		label="!((!rst_ni))",
		lineno=765];
	"739:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922c90>",
		fillcolor=cadetblue,
		label="739:BS
nmi_mode_d = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922c90>]",
		style=filled,
		typ=BlockingSubstitution];
	"739:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"694:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af92dad0>",
		fillcolor=turquoise,
		label="694:BL
halt_if = 1'b1;
flush_id = 1'b1;
ctrl_fsm_ns = DECODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d9d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92db10>]",
		style=filled,
		typ=Block];
	"694:BL" -> "751:IF"	 [cond="[]",
		lineno=None];
	"698:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af905590>",
		fillcolor=springgreen,
		label="698:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"694:BL" -> "698:IF"	 [cond="[]",
		lineno=None];
	"513:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afdf0b50>",
		def_var="['ebreak_into_debug']",
		fillcolor=deepskyblue,
		label="513:AS
ebreak_into_debug = (priv_mode_i == PRIV_LVL_M)? debug_ebreakm_i : 
(priv_mode_i == PRIV_LVL_U)? debug_ebreaku_i : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['priv_mode_i', 'PRIV_LVL_M', 'debug_ebreakm_i', 'priv_mode_i', 'PRIV_LVL_U', 'debug_ebreaku_i']"];
	"513:AS" -> "550:AL";
	"523:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0dbd0>",
		fillcolor=cadetblue,
		label="523:BS
mfip_id = 4'd11;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0dbd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"523:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"547:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5ed0>",
		fillcolor=cadetblue,
		label="547:BS
mfip_id = 4'd0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5ed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"547:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"521:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d8d0>",
		fillcolor=cadetblue,
		label="521:BS
mfip_id = 4'd12;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d8d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"521:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"714:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8f4690>",
		fillcolor=turquoise,
		label="714:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"714:IF" -> "714:BL"	 [cond="['ebrk_insn']",
		label=ebrk_insn,
		lineno=714];
	"725:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af922590>",
		fillcolor=springgreen,
		label="725:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"714:IF" -> "725:IF"	 [cond="['ebrk_insn']",
		label="!(ebrk_insn)",
		lineno=714];
	"503:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009c790>",
		def_var="['ebrk_insn']",
		fillcolor=deepskyblue,
		label="503:AS
ebrk_insn = ebrk_insn_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ebrk_insn_i', 'instr_valid_i']"];
	"503:AS" -> "509:AS";
	"503:AS" -> "550:AL";
	"673:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916110>",
		fillcolor=cadetblue,
		label="673:BS
debug_cause_o = DBG_CAUSE_STEP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916110>]",
		style=filled,
		typ=BlockingSubstitution];
	"673:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"642:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8fa690>",
		fillcolor=springgreen,
		label="642:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"642:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8f82d0>",
		fillcolor=turquoise,
		label="642:BL
pc_mux_o = PC_EXC;
pc_set_o = 1'b1;
exc_pc_mux_o = EXC_PC_IRQ;
csr_save_if_o = 1'b1;
csr_save_cause_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fac50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fad90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8faf10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f80d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8250>]",
		style=filled,
		typ=Block];
	"642:IF" -> "642:BL"	 [cond="['handle_irq']",
		label=handle_irq,
		lineno=642];
	"631:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8fa450>",
		fillcolor=turquoise,
		label="631:BL
ctrl_fsm_ns = DBG_TAKEN_IF;
halt_if = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fa410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fa590>]",
		style=filled,
		typ=Block];
	"631:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"659:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9072d0>",
		fillcolor=cadetblue,
		label="659:BS
exc_cause_o = EXC_CAUSE_IRQ_TIMER_M;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9072d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"659:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"505:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009cc90>",
		def_var="['instr_fetch_err']",
		fillcolor=deepskyblue,
		label="505:AS
instr_fetch_err = instr_fetch_err_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_fetch_err_i', 'instr_valid_i']"];
	"505:AS" -> "509:AS";
	"505:AS" -> "550:AL";
	"694:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41af92d610>",
		fillcolor=lightcyan,
		label="694:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"694:CA" -> "694:BL"	 [cond="[]",
		lineno=None];
	"515:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f41afdf0f50>",
		clk_sens=False,
		fillcolor=gold,
		label="515:AL",
		sens="[]",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['csr_mfip_i']"];
	"515:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe0d150>",
		fillcolor=turquoise,
		label="515:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"515:AL" -> "515:BL"	 [cond="[]",
		lineno=None];
	"741:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af9013d0>",
		fillcolor=springgreen,
		label="741:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"741:IF" -> "741:BL"	 [cond="['dret_insn']",
		label=dret_insn,
		lineno=741];
	"747:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af901590>",
		fillcolor=springgreen,
		label="747:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"741:IF" -> "747:IF"	 [cond="['dret_insn']",
		label="!(dret_insn)",
		lineno=741];
	"641:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41af8fab10>",
		fillcolor=lightcyan,
		label="641:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"641:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8fa550>",
		fillcolor=turquoise,
		label="641:BL
ctrl_fsm_ns = DECODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8950>]",
		style=filled,
		typ=Block];
	"641:CA" -> "641:BL"	 [cond="[]",
		lineno=None];
	"520:IF" -> "521:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[12]",
		lineno=520];
	"522:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe0db90>",
		fillcolor=springgreen,
		label="522:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"520:IF" -> "522:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[12])",
		lineno=520];
	"715:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f4f50>",
		fillcolor=springgreen,
		label="715:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"723:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922190>",
		fillcolor=cadetblue,
		label="723:BS
exc_cause_o = EXC_CAUSE_BREAKPOINT;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922190>]",
		style=filled,
		typ=BlockingSubstitution];
	"715:IF" -> "723:BS"	 [cond="['debug_mode_q', 'ebreak_into_debug']",
		label="!((debug_mode_q | ebreak_into_debug))",
		lineno=715];
	"715:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8f4e10>",
		fillcolor=turquoise,
		label="715:BL
pc_set_o = 1'b0;
csr_save_id_o = 1'b0;
csr_save_cause_o = 1'b0;
ctrl_fsm_ns = DBG_TAKEN_ID;
flush_id = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f49d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4b50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4cd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4e50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f4f90>]",
		style=filled,
		typ=Block];
	"715:IF" -> "715:BL"	 [cond="['debug_mode_q', 'ebreak_into_debug']",
		label="(debug_mode_q | ebreak_into_debug)",
		lineno=715];
	"657:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907110>",
		fillcolor=cadetblue,
		label="657:BS
exc_cause_o = EXC_CAUSE_IRQ_SOFTWARE_M;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907110>]",
		style=filled,
		typ=BlockingSubstitution];
	"657:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"764:AL" -> "764:BL"	 [cond="[]",
		lineno=None];
	"698:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af905650>",
		fillcolor=turquoise,
		label="698:BL
pc_set_o = 1'b1;
pc_mux_o = PC_EXC;
exc_pc_mux_o = (debug_mode_q)? EXC_PC_DBG_EXC : EXC_PC_EXC;
csr_save_id_o = 1'b1;
csr_\
save_cause_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92de90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92dfd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af905310>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af905450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9055d0>]",
		style=filled,
		typ=Block];
	"704:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af905a50>",
		fillcolor=springgreen,
		label="704:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"698:BL" -> "704:IF"	 [cond="[]",
		lineno=None];
	"615:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afdfdfd0>",
		fillcolor=lightcyan,
		label="615:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"615:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af90ce10>",
		fillcolor=turquoise,
		label="615:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"615:CA" -> "615:BL"	 [cond="[]",
		lineno=None];
	"597:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdfd310>",
		fillcolor=springgreen,
		label="597:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"598:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd350>",
		fillcolor=cadetblue,
		label="598:BS
ctrl_fsm_ns = FIRST_FETCH;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd350>]",
		style=filled,
		typ=BlockingSubstitution];
	"597:IF" -> "598:BS"	 [cond="['irq_nm_i', 'irq_pending_i', 'debug_req_i', 'debug_mode_q', 'debug_single_step_i']",
		label="(irq_nm_i || irq_pending_i || debug_req_i || debug_mode_q || debug_single_step_i)",
		lineno=597];
	"600:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd4d0>",
		fillcolor=cadetblue,
		label="600:BS
ctrl_busy_o = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdfd4d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"597:IF" -> "600:BS"	 [cond="['irq_nm_i', 'irq_pending_i', 'debug_req_i', 'debug_mode_q', 'debug_single_step_i']",
		label="!((irq_nm_i || irq_pending_i || debug_req_i || debug_mode_q || debug_single_step_i))",
		lineno=597];
	"529:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a510>",
		fillcolor=cadetblue,
		label="529:BS
mfip_id = 4'd8;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a510>]",
		style=filled,
		typ=BlockingSubstitution];
	"529:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"572:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f41af905a10>",
		fillcolor=linen,
		label="572:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"572:CS" -> "694:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"572:CS" -> "641:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"572:CS" -> "615:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"602:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afdfd550>",
		fillcolor=lightcyan,
		label="602:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "602:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"663:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41af8f8c50>",
		fillcolor=lightcyan,
		label="663:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "663:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"754:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41af901610>",
		fillcolor=lightcyan,
		label="754:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "754:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"573:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afe15590>",
		fillcolor=lightcyan,
		label="573:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "573:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"680:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41af916550>",
		fillcolor=lightcyan,
		label="680:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "680:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"580:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afe15c10>",
		fillcolor=lightcyan,
		label="580:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "580:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"586:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afe08210>",
		fillcolor=lightcyan,
		label="586:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "586:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"593:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f41afe08910>",
		fillcolor=lightcyan,
		label="593:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"572:CS" -> "593:CA"	 [cond="['ctrl_fsm_cs']",
		label=ctrl_fsm_cs,
		lineno=572];
	"605:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"663:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8f8e90>",
		fillcolor=turquoise,
		label="663:BL
ctrl_fsm_ns = DECODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916490>]",
		style=filled,
		typ=Block];
	"664:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af907390>",
		fillcolor=springgreen,
		label="664:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"663:BL" -> "664:IF"	 [cond="[]",
		lineno=None];
	"656:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af9070d0>",
		fillcolor=springgreen,
		label="656:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"656:IF" -> "659:BS"	 [cond="['csr_msip_i']",
		label="!(csr_msip_i)",
		lineno=656];
	"656:IF" -> "657:BS"	 [cond="['csr_msip_i']",
		label=csr_msip_i,
		lineno=656];
	"602:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afdfdc90>",
		fillcolor=turquoise,
		label="602:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"602:CA" -> "602:BL"	 [cond="[]",
		lineno=None];
	"664:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af907d90>",
		fillcolor=turquoise,
		label="664:BL
flush_id = 1'b1;
pc_mux_o = PC_EXC;
pc_set_o = 1'b1;
exc_pc_mux_o = EXC_PC_DBD;
csr_save_if_o = 1'b1;
debug_csr_save_o = \
1'b1;
csr_save_cause_o = 1'b1;
debug_mode_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907690>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9077d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907950>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907ad0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907c50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af907dd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9163d0>]",
		style=filled,
		typ=Block];
	"672:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af9161d0>",
		fillcolor=springgreen,
		label="672:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"664:BL" -> "672:IF"	 [cond="[]",
		lineno=None];
	"536:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdf5110>",
		fillcolor=springgreen,
		label="536:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"538:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdf5410>",
		fillcolor=springgreen,
		label="538:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"536:IF" -> "538:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[5])",
		lineno=536];
	"537:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5150>",
		fillcolor=cadetblue,
		label="537:BS
mfip_id = 4'd5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5150>]",
		style=filled,
		typ=BlockingSubstitution];
	"536:IF" -> "537:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[5]",
		lineno=536];
	"617:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af90c650>",
		fillcolor=springgreen,
		label="617:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"617:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af90c450>",
		fillcolor=turquoise,
		label="617:BL
ctrl_fsm_ns = FLUSH;
halt_if = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90c490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90c5d0>]",
		style=filled,
		typ=Block];
	"617:IF" -> "617:BL"	 [cond="['special_req']",
		label=special_req,
		lineno=617];
	"621:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af90c7d0>",
		fillcolor=springgreen,
		label="621:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"617:IF" -> "621:IF"	 [cond="['special_req']",
		label="!(special_req)",
		lineno=617];
	"621:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af90cc10>",
		fillcolor=turquoise,
		label="621:BL
pc_mux_o = PC_JUMP;
pc_set_o = 1'b1;
perf_tbranch_o = branch_set_i;
perf_jump_o = jump_set_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90c950>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90ca90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90cc50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90cd90>]",
		style=filled,
		typ=Block];
	"621:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"522:IF" -> "523:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[11]",
		lineno=522];
	"524:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe0de90>",
		fillcolor=springgreen,
		label="524:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"522:IF" -> "524:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[11])",
		lineno=522];
	"573:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe15a50>",
		fillcolor=turquoise,
		label="573:BL
instr_req_o = 1'b0;
pc_mux_o = PC_BOOT;
pc_set_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15890>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe159d0>]",
		style=filled,
		typ=Block];
	"577:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe15b10>",
		fillcolor=springgreen,
		label="577:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"573:BL" -> "577:IF"	 [cond="[]",
		lineno=None];
	"725:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af922350>",
		fillcolor=turquoise,
		label="725:BL
exc_cause_o = EXC_CAUSE_STORE_ACCESS_FAULT;
csr_mtval_o = lsu_addr_last_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922390>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922510>]",
		style=filled,
		typ=Block];
	"725:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"616:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af90c1d0>",
		fillcolor=springgreen,
		label="616:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"615:BL" -> "616:IF"	 [cond="[]",
		lineno=None];
	"630:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8fa090>",
		fillcolor=springgreen,
		label="630:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"615:BL" -> "630:IF"	 [cond="[]",
		lineno=None];
	"532:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe1aad0>",
		fillcolor=springgreen,
		label="532:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"534:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe1add0>",
		fillcolor=springgreen,
		label="534:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"532:IF" -> "534:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[6])",
		lineno=532];
	"533:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1ab10>",
		fillcolor=cadetblue,
		label="533:BS
mfip_id = 4'd6;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1ab10>]",
		style=filled,
		typ=BlockingSubstitution];
	"532:IF" -> "533:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[6]",
		lineno=532];
	"545:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5d50>",
		fillcolor=cadetblue,
		label="545:BS
mfip_id = 4'd1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5d50>]",
		style=filled,
		typ=BlockingSubstitution];
	"545:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"641:BL" -> "642:IF"	 [cond="[]",
		lineno=None];
	"497:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b008ebd0>",
		def_var="['load_err_d']",
		fillcolor=deepskyblue,
		label="497:AS
load_err_d = load_err_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['load_err_i']"];
	"497:AS" -> "764:AL";
	"519:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"663:CA" -> "663:BL"	 [cond="[]",
		lineno=None];
	"540:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdf5710>",
		fillcolor=springgreen,
		label="540:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"541:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5750>",
		fillcolor=cadetblue,
		label="541:BS
mfip_id = 4'd3;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5750>]",
		style=filled,
		typ=BlockingSubstitution];
	"540:IF" -> "541:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[3]",
		lineno=540];
	"542:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdf5a10>",
		fillcolor=springgreen,
		label="542:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"540:IF" -> "542:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[3])",
		lineno=540];
	"508:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afe22810>",
		def_var="['illegal_insn_d']",
		fillcolor=deepskyblue,
		label="508:AS
illegal_insn_d = (illegal_insn_i | illegal_dret | illegal_umode) & (ctrl_fsm_cs != FLUSH);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['illegal_insn_i', 'illegal_dret', 'illegal_umode', 'ctrl_fsm_cs', 'FLUSH']"];
	"508:AS" -> "509:AS";
	"508:AS" -> "764:AL";
	"655:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8e10>",
		fillcolor=cadetblue,
		label="655:BS
exc_cause_o = EXC_CAUSE_IRQ_EXTERNAL_M;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8e10>]",
		style=filled,
		typ=BlockingSubstitution];
	"655:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"754:CA" -> "754:BL"	 [cond="[]",
		lineno=None];
	"534:IF" -> "536:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[5])",
		lineno=534];
	"535:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1ae10>",
		fillcolor=cadetblue,
		label="535:BS
mfip_id = 4'd5;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1ae10>]",
		style=filled,
		typ=BlockingSubstitution];
	"534:IF" -> "535:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[5]",
		lineno=534];
	"708:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af905cd0>",
		fillcolor=turquoise,
		label="708:BL
exc_cause_o = EXC_CAUSE_ILLEGAL_INSN;
csr_mtval_o = (instr_is_compressed_i)? { 16'b0, instr_compressed_i } : instr_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af905d10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af905e90>]",
		style=filled,
		typ=Block];
	"708:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"516:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe0d290>",
		fillcolor=springgreen,
		label="516:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"516:IF" -> "518:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[14])",
		lineno=516];
	"517:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d2d0>",
		fillcolor=cadetblue,
		label="517:BS
mfip_id = 4'd14;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0d2d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"516:IF" -> "517:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[14]",
		lineno=516];
	"602:BL" -> "605:IF"	 [cond="[]",
		lineno=None];
	"610:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdfdd10>",
		fillcolor=springgreen,
		label="610:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"602:BL" -> "610:IF"	 [cond="[]",
		lineno=None];
	"603:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdfd610>",
		fillcolor=springgreen,
		label="603:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"602:BL" -> "603:IF"	 [cond="[]",
		lineno=None];
	"573:CA" -> "573:BL"	 [cond="[]",
		lineno=None];
	"Leaf_764:AL"	 [def_var="['debug_mode_q', 'illegal_insn_q', 'load_err_q', 'store_err_q', 'ctrl_fsm_cs', 'nmi_mode_q', 'exc_req_q']",
		label="Leaf_764:AL"];
	"Leaf_764:AL" -> "509:AS";
	"Leaf_764:AL" -> "508:AS";
	"Leaf_764:AL" -> "550:AL";
	"514:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afdf0ed0>",
		def_var="['handle_irq']",
		fillcolor=deepskyblue,
		label="514:AS
handle_irq = ~debug_mode_q & (irq_nm_i & ~nmi_mode_q | irq_pending_i & csr_mstatus_mie_i);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['debug_mode_q', 'irq_nm_i', 'nmi_mode_q', 'irq_pending_i', 'csr_mstatus_mie_i']"];
	"Leaf_764:AL" -> "514:AS";
	"512:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afdf0610>",
		def_var="['enter_debug_mode']",
		fillcolor=deepskyblue,
		label="512:AS
enter_debug_mode = (debug_req_i | debug_single_step_i & instr_valid_i) & ~debug_mode_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['debug_req_i', 'debug_single_step_i', 'instr_valid_i', 'debug_mode_q']"];
	"Leaf_764:AL" -> "512:AS";
	"760:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41af901c50>",
		def_var="['debug_mode_o']",
		fillcolor=deepskyblue,
		label="760:AS
debug_mode_o = debug_mode_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['debug_mode_q']"];
	"Leaf_764:AL" -> "760:AS";
	"506:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009cf10>",
		def_var="['illegal_dret']",
		fillcolor=deepskyblue,
		label="506:AS
illegal_dret = dret_insn & ~debug_mode_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dret_insn', 'debug_mode_q']"];
	"Leaf_764:AL" -> "506:AS";
	"502:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009c590>",
		def_var="['wfi_insn']",
		fillcolor=deepskyblue,
		label="502:AS
wfi_insn = wfi_insn_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['wfi_insn_i', 'instr_valid_i']"];
	"502:AS" -> "550:AL";
	"502:AS" -> "511:AS";
	"507:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afe22310>",
		def_var="['illegal_umode']",
		fillcolor=deepskyblue,
		label="507:AS
illegal_umode = (priv_mode_i != PRIV_LVL_M) & (mret_insn | csr_mstatus_tw_i & wfi_insn);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['priv_mode_i', 'PRIV_LVL_M', 'mret_insn', 'csr_mstatus_tw_i', 'wfi_insn']"];
	"502:AS" -> "507:AS";
	"517:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"610:IF" -> "610:BL"	 [cond="['enter_debug_mode']",
		label=enter_debug_mode,
		lineno=610];
	"734:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af922d10>",
		fillcolor=springgreen,
		label="734:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"734:IF" -> "741:IF"	 [cond="['mret_insn']",
		label="!(mret_insn)",
		lineno=734];
	"734:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af922ad0>",
		fillcolor=turquoise,
		label="734:BL
pc_mux_o = PC_ERET;
pc_set_o = 1'b1;
csr_restore_mret_id_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f48d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922910>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922a50>]",
		style=filled,
		typ=Block];
	"734:IF" -> "734:BL"	 [cond="['mret_insn']",
		label=mret_insn,
		lineno=734];
	"525:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0ded0>",
		fillcolor=cadetblue,
		label="525:BS
mfip_id = 4'd10;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0ded0>]",
		style=filled,
		typ=BlockingSubstitution];
	"525:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"627:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af90cf10>",
		fillcolor=springgreen,
		label="627:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"628:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90cfd0>",
		fillcolor=cadetblue,
		label="628:BS
halt_if = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af90cfd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"627:IF" -> "628:BS"	 [cond="['enter_debug_mode', 'handle_irq', 'stall']",
		label="((enter_debug_mode || handle_irq) && stall)",
		lineno=627];
	"680:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af92d4d0>",
		fillcolor=turquoise,
		label="680:BL
flush_id = 1'b1;
pc_mux_o = PC_EXC;
pc_set_o = 1'b1;
exc_pc_mux_o = EXC_PC_DBD;
debug_mode_d = 1'b1;
ctrl_fsm_ns = DECODE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9166d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916990>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916b10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d510>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af92d650>]",
		style=filled,
		typ=Block];
	"680:CA" -> "680:BL"	 [cond="[]",
		lineno=None];
	"763:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41af911550>",
		def_var="['instr_valid_clear_o']",
		fillcolor=deepskyblue,
		label="763:AS
instr_valid_clear_o = ~(stall | halt_if) | flush_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['stall', 'halt_if', 'flush_id']"];
	"580:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe080d0>",
		fillcolor=turquoise,
		label="580:BL
instr_req_o = 1'b1;
pc_mux_o = PC_BOOT;
pc_set_o = 1'b1;
ctrl_fsm_ns = FIRST_FETCH;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15e10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15f90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08250>]",
		style=filled,
		typ=Block];
	"580:CA" -> "580:BL"	 [cond="[]",
		lineno=None];
	"550:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe15490>",
		fillcolor=turquoise,
		label="550:BL
instr_req_o = 1'b1;
csr_save_if_o = 1'b0;
csr_save_id_o = 1'b0;
csr_restore_mret_id_o = 1'b0;
csr_restore_dret_id_o = 1'b0;
\
csr_save_cause_o = 1'b0;
csr_mtval_o = 1'sb0;
pc_mux_o = PC_BOOT;
pc_set_o = 1'b0;
exc_pc_mux_o = EXC_PC_IRQ;
exc_cause_o = EXC_\
CAUSE_INSN_ADDR_MISA;
ctrl_fsm_ns = ctrl_fsm_cs;
ctrl_busy_o = 1'b1;
halt_if = 1'b0;
flush_id = 1'b0;
debug_csr_save_o = 1'b0;
debug_\
cause_o = DBG_CAUSE_EBREAK;
debug_mode_d = debug_mode_q;
nmi_mode_d = nmi_mode_q;
perf_tbranch_o = 1'b0;
perf_jump_o = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe0dd10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a550>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1ab50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf51d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf57d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5dd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b050>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b190>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b2d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b450>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b5d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b710>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1b990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1bad0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1bc50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1be10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1bfd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15150>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe152d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe15410>]",
		style=filled,
		typ=Block];
	"550:AL" -> "550:BL"	 [cond="[]",
		lineno=None];
	"Leaf_550:AL" -> "764:AL";
	"Leaf_550:AL" -> "763:AS";
	"762:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41af9112d0>",
		def_var="['id_in_ready_o']",
		fillcolor=deepskyblue,
		label="762:AS
id_in_ready_o = ~stall & ~halt_if;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['stall', 'halt_if']"];
	"Leaf_550:AL" -> "762:AS";
	"648:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f8790>",
		fillcolor=springgreen,
		label="648:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"648:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8f8590>",
		fillcolor=turquoise,
		label="648:BL
exc_cause_o = EXC_CAUSE_IRQ_NM;
nmi_mode_d = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f85d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8710>]",
		style=filled,
		typ=Block];
	"648:IF" -> "648:BL"	 [cond="['irq_nm_i', 'nmi_mode_q']",
		label="(irq_nm_i && !nmi_mode_q)",
		lineno=648];
	"652:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f8b50>",
		fillcolor=springgreen,
		label="652:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"648:IF" -> "652:IF"	 [cond="['irq_nm_i', 'nmi_mode_q']",
		label="!((irq_nm_i && !nmi_mode_q))",
		lineno=648];
	"524:IF" -> "526:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[10])",
		lineno=524];
	"524:IF" -> "525:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[10]",
		lineno=524];
	"510:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afe22d50>",
		def_var="['exc_req_lsu']",
		fillcolor=deepskyblue,
		label="510:AS
exc_req_lsu = store_err_i | load_err_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['store_err_i', 'load_err_i']"];
	"510:AS" -> "511:AS";
	"593:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe08e90>",
		fillcolor=turquoise,
		label="593:BL
instr_req_o = 1'b0;
halt_if = 1'b1;
flush_id = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08cd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08e10>]",
		style=filled,
		typ=Block];
	"593:BL" -> "597:IF"	 [cond="[]",
		lineno=None];
	"729:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af9226d0>",
		fillcolor=turquoise,
		label="729:BL
exc_cause_o = EXC_CAUSE_LOAD_ACCESS_FAULT;
csr_mtval_o = lsu_addr_last_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922710>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af922890>]",
		style=filled,
		typ=Block];
	"729:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"704:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af905850>",
		fillcolor=turquoise,
		label="704:BL
exc_cause_o = EXC_CAUSE_INSTR_ACCESS_FAULT;
csr_mtval_o = pc_id_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af905890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af9059d0>]",
		style=filled,
		typ=Block];
	"704:IF" -> "704:BL"	 [cond="['instr_fetch_err']",
		label=instr_fetch_err,
		lineno=704];
	"708:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f40d0>",
		fillcolor=springgreen,
		label="708:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"704:IF" -> "708:IF"	 [cond="['instr_fetch_err']",
		label="!(instr_fetch_err)",
		lineno=704];
	"544:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afdf5d10>",
		fillcolor=springgreen,
		label="544:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"544:IF" -> "547:BS"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[1])",
		lineno=544];
	"544:IF" -> "545:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[1]",
		lineno=544];
	"704:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"511:AS" -> "550:AL";
	"586:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41afe087d0>",
		fillcolor=turquoise,
		label="586:BL
ctrl_busy_o = 1'b0;
instr_req_o = 1'b0;
halt_if = 1'b1;
flush_id = 1'b1;
ctrl_fsm_ns = SLEEP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08450>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08590>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe086d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08810>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe08950>]",
		style=filled,
		typ=Block];
	"586:CA" -> "586:BL"	 [cond="[]",
		lineno=None];
	"738:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af922b50>",
		fillcolor=springgreen,
		label="738:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"738:IF" -> "739:BS"	 [cond="['nmi_mode_q']",
		label=nmi_mode_q,
		lineno=738];
	"642:BL" -> "648:IF"	 [cond="[]",
		lineno=None];
	"713:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"541:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"680:BL" -> "685:IF"	 [cond="[]",
		lineno=None];
	"515:BL" -> "516:IF"	 [cond="[]",
		lineno=None];
	"528:IF" -> "529:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[8]",
		lineno=528];
	"530:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41afe1a7d0>",
		fillcolor=springgreen,
		label="530:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"528:IF" -> "530:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[8])",
		lineno=528];
	"672:IF" -> "673:BS"	 [cond="['debug_single_step_i']",
		label=debug_single_step_i,
		lineno=672];
	"675:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916310>",
		fillcolor=cadetblue,
		label="675:BS
debug_cause_o = DBG_CAUSE_HALTREQ;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af916310>]",
		style=filled,
		typ=BlockingSubstitution];
	"672:IF" -> "675:BS"	 [cond="['debug_single_step_i']",
		label="!(debug_single_step_i)",
		lineno=672];
	"586:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"617:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"698:IF" -> "698:BL"	 [cond="['exc_req_q', 'store_err_q', 'load_err_q']",
		label="(exc_req_q || store_err_q || load_err_q)",
		lineno=698];
	"698:IF" -> "734:IF"	 [cond="['exc_req_q', 'store_err_q', 'load_err_q']",
		label="!((exc_req_q || store_err_q || load_err_q))",
		lineno=698];
	"598:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"527:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"685:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"577:IF" -> "578:BS"	 [cond="['fetch_enable_i']",
		label=fetch_enable_i,
		lineno=577];
	"762:AS" -> "550:AL";
	"621:IF" -> "621:BL"	 [cond="['branch_set_i', 'jump_set_i']",
		label="(branch_set_i || jump_set_i)",
		lineno=621];
	"500:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009c190>",
		def_var="['mret_insn']",
		fillcolor=deepskyblue,
		label="500:AS
mret_insn = mret_insn_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mret_insn_i', 'instr_valid_i']"];
	"500:AS" -> "550:AL";
	"500:AS" -> "511:AS";
	"500:AS" -> "507:AS";
	"538:IF" -> "540:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[4])",
		lineno=538];
	"539:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5450>",
		fillcolor=cadetblue,
		label="539:BS
mfip_id = 4'd4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5450>]",
		style=filled,
		typ=BlockingSubstitution];
	"538:IF" -> "539:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[4]",
		lineno=538];
	"499:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b008ef50>",
		def_var="['ecall_insn']",
		fillcolor=deepskyblue,
		label="499:AS
ecall_insn = ecall_insn_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['ecall_insn_i', 'instr_valid_i']"];
	"499:AS" -> "509:AS";
	"499:AS" -> "550:AL";
	"549:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41afe0d650>",
		def_var="['unused_csr_mtip']",
		fillcolor=deepskyblue,
		label="549:AS
unused_csr_mtip = csr_mtip_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['csr_mtip_i']"];
	"501:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b009c390>",
		def_var="['dret_insn']",
		fillcolor=deepskyblue,
		label="501:AS
dret_insn = dret_insn_i & instr_valid_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['dret_insn_i', 'instr_valid_i']"];
	"501:AS" -> "550:AL";
	"501:AS" -> "511:AS";
	"501:AS" -> "506:AS";
	"539:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"600:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"593:CA" -> "593:BL"	 [cond="[]",
		lineno=None];
	"765:BL" -> "Leaf_764:AL"	 [cond="[]",
		lineno=None];
	"543:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5a50>",
		fillcolor=cadetblue,
		label="543:BS
mfip_id = 4'd2;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afdf5a50>]",
		style=filled,
		typ=BlockingSubstitution];
	"543:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"533:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"723:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"708:IF" -> "712:IF"	 [cond="['illegal_insn_q']",
		label="!(illegal_insn_q)",
		lineno=708];
	"708:IF" -> "708:BL"	 [cond="['illegal_insn_q']",
		label=illegal_insn_q,
		lineno=708];
	"664:IF" -> "664:BL"	 [cond="['debug_single_step_i', 'debug_req_i']",
		label="(debug_single_step_i || debug_req_i)",
		lineno=664];
	"514:AS" -> "550:AL";
	"752:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"550:BL" -> "572:CS"	 [cond="[]",
		lineno=None];
	"675:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"542:IF" -> "544:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[2])",
		lineno=542];
	"542:IF" -> "543:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[2]",
		lineno=542];
	"648:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"635:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af8fa950>",
		fillcolor=turquoise,
		label="635:BL
ctrl_fsm_ns = IRQ_TAKEN;
halt_if = 1'b1;
flush_id = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fa850>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8fa990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8faad0>]",
		style=filled,
		typ=Block];
	"635:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"715:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"512:AS" -> "550:AL";
	"631:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8fa610>",
		fillcolor=springgreen,
		label="631:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"631:IF" -> "631:BL"	 [cond="['enter_debug_mode']",
		label=enter_debug_mode,
		lineno=631];
	"635:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8fa6d0>",
		fillcolor=springgreen,
		label="635:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"631:IF" -> "635:IF"	 [cond="['enter_debug_mode']",
		label="!(enter_debug_mode)",
		lineno=631];
	"628:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"506:AS" -> "508:AS";
	"747:IF" -> "748:BS"	 [cond="['wfi_insn']",
		label=wfi_insn,
		lineno=747];
	"749:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af9017d0>",
		fillcolor=springgreen,
		label="749:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"747:IF" -> "749:IF"	 [cond="['wfi_insn']",
		label="!(wfi_insn)",
		lineno=747];
	"603:IF" -> "604:BS"	 [cond="['id_in_ready_o']",
		label=id_in_ready_o,
		lineno=603];
	"714:BL" -> "715:IF"	 [cond="[]",
		lineno=None];
	"653:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8b90>",
		fillcolor=cadetblue,
		label="653:BS
exc_cause_o = sv2v_cast_89EA8({ 2'b11, mfip_id });",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af8f8b90>]",
		style=filled,
		typ=BlockingSubstitution];
	"653:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"750:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901910>",
		fillcolor=cadetblue,
		label="750:BS
ctrl_fsm_ns = IRQ_TAKEN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41af901910>]",
		style=filled,
		typ=BlockingSubstitution];
	"750:BS" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"531:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a810>",
		fillcolor=cadetblue,
		label="531:BS
mfip_id = 4'd7;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f41afe1a810>]",
		style=filled,
		typ=BlockingSubstitution];
	"531:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"635:IF" -> "635:BL"	 [cond="['handle_irq']",
		label=handle_irq,
		lineno=635];
	"734:BL" -> "738:IF"	 [cond="[]",
		lineno=None];
	"654:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f41af8f8dd0>",
		fillcolor=springgreen,
		label="654:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"654:IF" -> "656:IF"	 [cond="['csr_meip_i']",
		label="!(csr_meip_i)",
		lineno=654];
	"654:IF" -> "655:BS"	 [cond="['csr_meip_i']",
		label=csr_meip_i,
		lineno=654];
	"616:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f41af90cdd0>",
		fillcolor=turquoise,
		label="616:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"616:IF" -> "616:BL"	 [cond="['instr_valid_i']",
		label=instr_valid_i,
		lineno=616];
	"580:BL" -> "Leaf_550:AL"	 [cond="[]",
		lineno=None];
	"616:BL" -> "617:IF"	 [cond="[]",
		lineno=None];
	"616:BL" -> "627:IF"	 [cond="[]",
		lineno=None];
	"761:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41af901e10>",
		def_var="['stall']",
		fillcolor=deepskyblue,
		label="761:AS
stall = stall_lsu_i | stall_multdiv_i | stall_jump_i | stall_branch_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['stall_lsu_i', 'stall_multdiv_i', 'stall_jump_i', 'stall_branch_i']"];
	"761:AS" -> "763:AS";
	"761:AS" -> "550:AL";
	"761:AS" -> "762:AS";
	"498:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f41b008ed10>",
		def_var="['store_err_d']",
		fillcolor=deepskyblue,
		label="498:AS
store_err_d = store_err_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['store_err_i']"];
	"498:AS" -> "764:AL";
	"507:AS" -> "508:AS";
	"725:IF" -> "725:BL"	 [cond="['store_err_q']",
		label=store_err_q,
		lineno=725];
	"725:IF" -> "729:BL"	 [cond="['store_err_q']",
		label="!(store_err_q)",
		lineno=725];
	"774:BL" -> "Leaf_764:AL"	 [cond="[]",
		lineno=None];
	"749:IF" -> "750:BS"	 [cond="['csr_pipe_flush', 'handle_irq']",
		label="(csr_pipe_flush && handle_irq)",
		lineno=749];
	"630:IF" -> "631:IF"	 [cond="['stall', 'special_req']",
		label="(!stall && !special_req)",
		lineno=630];
	"530:IF" -> "532:IF"	 [cond="['csr_mfip_i']",
		label="!(csr_mfip_i[7])",
		lineno=530];
	"530:IF" -> "531:BS"	 [cond="['csr_mfip_i']",
		label="csr_mfip_i[7]",
		lineno=530];
	"535:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"537:BS" -> "Leaf_515:AL"	 [cond="[]",
		lineno=None];
	"652:IF" -> "653:BS"	 [cond="['csr_mfip_i']",
		label="(csr_mfip_i != 15'b0)",
		lineno=652];
	"652:IF" -> "654:IF"	 [cond="['csr_mfip_i']",
		label="!((csr_mfip_i != 15'b0))",
		lineno=652];
}
