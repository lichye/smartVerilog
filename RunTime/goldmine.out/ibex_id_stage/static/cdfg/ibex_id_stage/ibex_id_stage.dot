strict digraph "compose( ,  )" {
	node [label="\N"];
	"576:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3acd0>",
		fillcolor=cadetblue,
		label="576:BS
imm_b = imm_i_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3acd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_574:AL"	 [def_var="['imm_b']",
		label="Leaf_574:AL"];
	"576:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"568:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3a110>",
		fillcolor=lightcyan,
		label="568:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"568:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a250>",
		fillcolor=cadetblue,
		label="568:BS
alu_operand_a = lsu_addr_last_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a250>]",
		style=filled,
		typ=BlockingSubstitution];
	"568:CA" -> "568:BS"	 [cond="[]",
		lineno=None];
	"587:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d1f5d0>",
		def_var="['regfile_we']",
		fillcolor=deepskyblue,
		label="587:AS
regfile_we = (illegal_csr_insn_i || !instr_executing)? 1'b0 : 
(data_req_dec || multdiv_en_dec)? regfile_we_wb : regfile_\
we_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['illegal_csr_insn_i', 'instr_executing', 'data_req_dec', 'multdiv_en_dec', 'regfile_we_wb', 'regfile_we_dec']"];
	"614:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d15510>",
		def_var="['rfvi_reg_we_o']",
		fillcolor=deepskyblue,
		label="614:AS
rfvi_reg_we_o = regfile_we;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_we']"];
	"587:AS" -> "614:AS";
	"736:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783d050>",
		def_var="['multdiv_signed_mode_ex_o']",
		fillcolor=deepskyblue,
		label="736:AS
multdiv_signed_mode_ex_o = multdiv_signed_mode;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['multdiv_signed_mode']"];
	"719:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237841cd0>",
		def_var="['multdiv_en_dec']",
		fillcolor=deepskyblue,
		label="719:AS
multdiv_en_dec = mult_en_dec | div_en_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mult_en_dec', 'div_en_dec']"];
	"719:AS" -> "587:AS";
	"720:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833150>",
		def_var="['instr_multicycle']",
		fillcolor=deepskyblue,
		label="720:AS
instr_multicycle = data_req_dec | multdiv_en_dec | branch_in_dec | jump_in_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_req_dec', 'multdiv_en_dec', 'branch_in_dec', 'jump_in_dec']"];
	"719:AS" -> "720:AS";
	"753:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2237819050>",
		clk_sens=False,
		fillcolor=gold,
		label="753:AL",
		sens="['data_req_dec', 'lsu_load_err_i', 'instr_multicycle_done_q', 'regfile_we_dec', 'WAIT_MULTICYCLE', 'multdiv_en_dec', 'IDLE', 'branch_\
decision_i', 'branch_in_dec', 'id_wb_fsm_cs', 'jump_in_dec']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['data_req_dec', 'lsu_load_err_i', 'instr_multicycle_done_q', 'regfile_we_dec', 'lsu_valid_i', 'instr_fetch_err_i', 'instr_new_i', '\
multdiv_en_dec', 'IDLE', 'branch_decision_i', 'WAIT_MULTICYCLE', 'branch_in_dec', 'id_wb_fsm_cs', 'jump_in_dec', 'ex_valid_i']"];
	"719:AS" -> "753:AL";
	"578:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e110>",
		fillcolor=cadetblue,
		label="578:BS
imm_b = imm_b_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e110>]",
		style=filled,
		typ=BlockingSubstitution];
	"578:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"773:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237849150>",
		fillcolor=lightcyan,
		label="773:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"773:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f22378494d0>",
		fillcolor=turquoise,
		label="773:BL
id_wb_fsm_ns = WAIT_MULTICYCLE;
stall_multdiv = 1'b1;
instr_multicycle_done_n = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849350>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849510>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849690>]",
		style=filled,
		typ=Block];
	"773:CA" -> "773:BL"	 [cond="[]",
		lineno=None];
	"729:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f490>",
		def_var="['data_wdata_ex_o']",
		fillcolor=deepskyblue,
		label="729:AS
data_wdata_ex_o = regfile_rdata_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_rdata_b']"];
	"586:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d2ef10>",
		def_var="['alu_operand_b']",
		fillcolor=deepskyblue,
		label="586:AS
alu_operand_b = (alu_op_b_mux_sel == OP_B_IMM)? imm_b : regfile_rdata_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_op_b_mux_sel', 'OP_B_IMM', 'imm_b', 'regfile_rdata_b']"];
	"732:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f9d0>",
		def_var="['alu_operand_b_ex_o']",
		fillcolor=deepskyblue,
		label="732:AS
alu_operand_b_ex_o = alu_operand_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_operand_b']"];
	"586:AS" -> "732:AS";
	"611:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d42fd0>",
		def_var="['rfvi_reg_rdata_rb_o']",
		fillcolor=deepskyblue,
		label="611:AS
rfvi_reg_rdata_rb_o = regfile_rdata_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_rdata_b']"];
	"569:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3a350>",
		fillcolor=lightcyan,
		label="569:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"569:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a450>",
		fillcolor=cadetblue,
		label="569:BS
alu_operand_a = pc_id_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a450>]",
		style=filled,
		typ=BlockingSubstitution];
	"569:CA" -> "569:BS"	 [cond="[]",
		lineno=None];
	"728:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f2d0>",
		def_var="['data_sign_ext_ex_o']",
		fillcolor=deepskyblue,
		label="728:AS
data_sign_ext_ex_o = data_sign_ext_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_sign_ext_id']"];
	"741:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f223783dad0>",
		fillcolor=turquoise,
		label="741:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"742:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f223783df90>",
		fillcolor=springgreen,
		label="742:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"741:BL" -> "742:IF"	 [cond="[]",
		lineno=None];
	"742:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f223783de10>",
		fillcolor=turquoise,
		label="742:BL
id_wb_fsm_cs <= IDLE;
branch_set_q <= 1'b0;
instr_multicycle_done_q <= 1'b0;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f223783dcd0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f223783de50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f223783dfd0>]",
		style=filled,
		typ=Block];
	"Leaf_741:AL"	 [def_var="['branch_set_q', 'instr_multicycle_done_q', 'id_wb_fsm_cs']",
		label="Leaf_741:AL"];
	"742:BL" -> "Leaf_741:AL"	 [cond="[]",
		lineno=None];
	"583:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2ec50>",
		fillcolor=cadetblue,
		label="583:BS
imm_b = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2ec50>]",
		style=filled,
		typ=BlockingSubstitution];
	"583:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"722:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f22378337d0>",
		def_var="['data_req_id']",
		fillcolor=deepskyblue,
		label="722:AS
data_req_id = (instr_executing)? data_req_dec : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_executing', 'data_req_dec']"];
	"725:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833d90>",
		def_var="['data_req_ex_o']",
		fillcolor=deepskyblue,
		label="725:AS
data_req_ex_o = data_req_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_req_id']"];
	"722:AS" -> "725:AS";
	"765:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f223781a750>",
		fillcolor=lightcyan,
		label="765:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"766:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f223781a810>",
		fillcolor=springgreen,
		label="766:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"765:CA" -> "766:IF"	 [cond="[]",
		lineno=None];
	"613:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d15390>",
		def_var="['rfvi_reg_wdata_rd_o']",
		fillcolor=deepskyblue,
		label="613:AS
rfvi_reg_wdata_rd_o = regfile_wdata;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_wdata']"];
	"741:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f223783d990>",
		clk_sens=True,
		fillcolor=gold,
		label="741:AL",
		sens="['clk_i', 'rst_ni']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['id_wb_fsm_ns', 'IDLE', 'rst_ni', 'instr_multicycle_done_n', 'branch_set_n']"];
	"741:AL" -> "741:BL"	 [cond="[]",
		lineno=None];
	"767:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237827910>",
		fillcolor=linen,
		label="767:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"766:IF" -> "767:CS"	 [cond="['instr_new_i', 'instr_fetch_err_i']",
		label="(instr_new_i & ~instr_fetch_err_i)",
		lineno=766];
	"570:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3a590>",
		fillcolor=lightcyan,
		label="570:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"570:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a690>",
		fillcolor=cadetblue,
		label="570:BS
alu_operand_a = imm_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a690>]",
		style=filled,
		typ=BlockingSubstitution];
	"570:CA" -> "570:BS"	 [cond="[]",
		lineno=None];
	"764:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237827cd0>",
		fillcolor=linen,
		label="764:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"764:CS" -> "765:CA"	 [cond="['id_wb_fsm_cs']",
		label=id_wb_fsm_cs,
		lineno=764];
	"796:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f223781a9d0>",
		fillcolor=lightcyan,
		label="796:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"764:CS" -> "796:CA"	 [cond="['id_wb_fsm_cs']",
		label=id_wb_fsm_cs,
		lineno=764];
	"809:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237830e50>",
		fillcolor=lightcyan,
		label="809:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"764:CS" -> "809:CA"	 [cond="['id_wb_fsm_cs']",
		label=id_wb_fsm_cs,
		lineno=764];
	"588:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237d1f750>",
		fillcolor=turquoise,
		label="588:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"589:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237d1ff50>",
		fillcolor=linen,
		label="589:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"588:BL" -> "589:CS"	 [cond="[]",
		lineno=None];
	"Leaf_565:AL"	 [def_var="['alu_operand_a']",
		label="Leaf_565:AL"];
	"569:BS" -> "Leaf_565:AL"	 [cond="[]",
		lineno=None];
	"797:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f2237830790>",
		fillcolor=springgreen,
		label="797:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"796:CA" -> "797:IF"	 [cond="[]",
		lineno=None];
	"592:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fed0>",
		fillcolor=cadetblue,
		label="592:BS
regfile_wdata = csr_rdata_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fed0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_588:AL"	 [def_var="['regfile_wdata']",
		label="Leaf_588:AL"];
	"592:BS" -> "Leaf_588:AL"	 [cond="[]",
		lineno=None];
	"565:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2237d18b50>",
		clk_sens=False,
		fillcolor=gold,
		label="565:AL",
		sens="['imm_a', 'regfile_rdata_a', 'lsu_addr_last_i', 'pc_id_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['regfile_rdata_a', 'imm_a', 'alu_op_a_mux_sel', 'pc_id_i', 'lsu_addr_last_i']"];
	"565:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237d18cd0>",
		fillcolor=turquoise,
		label="565:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"565:AL" -> "565:BL"	 [cond="[]",
		lineno=None];
	"721:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833590>",
		def_var="['instr_executing']",
		fillcolor=deepskyblue,
		label="721:AS
instr_executing = (instr_new_i | instr_multicycle & ~instr_multicycle_done_q) & ~instr_fetch_err_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_new_i', 'instr_multicycle', 'instr_multicycle_done_q', 'instr_fetch_err_i']"];
	"720:AS" -> "721:AS";
	"563:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d18790>",
		def_var="['imm_b_mux_sel']",
		fillcolor=deepskyblue,
		label="563:AS
imm_b_mux_sel = (lsu_addr_incr_req_i)? IMM_B_INCR_ADDR : imm_b_mux_sel_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['lsu_addr_incr_req_i', 'IMM_B_INCR_ADDR', 'imm_b_mux_sel_dec']"];
	"574:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2237d3a650>",
		clk_sens=False,
		fillcolor=gold,
		label="574:AL",
		sens="['imm_b_type', 'imm_s_type', 'imm_j_type', 'imm_u_type', 'imm_i_type', 'instr_is_compressed_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['imm_b_type', 'imm_s_type', 'imm_j_type', 'imm_u_type', 'imm_b_mux_sel', 'imm_i_type', 'instr_is_compressed_i']"];
	"563:AS" -> "574:AL";
	"731:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f810>",
		def_var="['alu_operand_a_ex_o']",
		fillcolor=deepskyblue,
		label="731:AS
alu_operand_a_ex_o = alu_operand_a;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_operand_a']"];
	"579:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e310>",
		fillcolor=cadetblue,
		label="579:BS
imm_b = imm_u_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e310>]",
		style=filled,
		typ=BlockingSubstitution];
	"579:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"809:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830f10>",
		fillcolor=cadetblue,
		label="809:BS
id_wb_fsm_ns = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830f10>]",
		style=filled,
		typ=BlockingSubstitution];
	"809:CA" -> "809:BS"	 [cond="[]",
		lineno=None];
	"581:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e890>",
		fillcolor=cadetblue,
		label="581:BS
imm_b = (instr_is_compressed_i)? 32'h2 : 32'h4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e890>]",
		style=filled,
		typ=BlockingSubstitution];
	"581:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"578:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3afd0>",
		fillcolor=lightcyan,
		label="578:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"578:CA" -> "578:BS"	 [cond="[]",
		lineno=None];
	"568:BS" -> "Leaf_565:AL"	 [cond="[]",
		lineno=None];
	"588:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2237d1f510>",
		clk_sens=False,
		fillcolor=gold,
		label="588:AL",
		sens="['regfile_wdata_lsu_i', 'csr_rdata_i', 'regfile_wdata_ex_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['regfile_wdata_lsu_i', 'csr_rdata_i', 'regfile_wdata_ex_i', 'regfile_wdata_sel']"];
	"588:AL" -> "588:BL"	 [cond="[]",
		lineno=None];
	"721:AS" -> "587:AS";
	"721:AS" -> "722:AS";
	"724:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833c50>",
		def_var="['div_en_id']",
		fillcolor=deepskyblue,
		label="724:AS
div_en_id = (instr_executing)? div_en_dec : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_executing', 'div_en_dec']"];
	"721:AS" -> "724:AS";
	"723:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833a10>",
		def_var="['mult_en_id']",
		fillcolor=deepskyblue,
		label="723:AS
mult_en_id = (instr_executing)? mult_en_dec : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_executing', 'mult_en_dec']"];
	"721:AS" -> "723:AS";
	"797:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237830650>",
		fillcolor=turquoise,
		label="797:BL
id_wb_fsm_ns = IDLE;
instr_multicycle_done_n = 1'b1;
regfile_we_wb = regfile_we_dec & ~lsu_load_err_i;
instr_ret_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830150>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830310>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22378305d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830710>]",
		style=filled,
		typ=Block];
	"797:IF" -> "797:BL"	 [cond="['data_req_dec', 'lsu_valid_i', 'data_req_dec', 'ex_valid_i']",
		label="(data_req_dec & lsu_valid_i | ~data_req_dec & ex_valid_i)",
		lineno=797];
	"803:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237830c50>",
		fillcolor=turquoise,
		label="803:BL
stall_lsu = data_req_dec;
stall_multdiv = multdiv_en_dec;
stall_branch = branch_in_dec;
stall_jump = jump_in_dec;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830910>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830ad0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830c90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237830dd0>]",
		style=filled,
		typ=Block];
	"797:IF" -> "803:BL"	 [cond="['data_req_dec', 'lsu_valid_i', 'data_req_dec', 'ex_valid_i']",
		label="!((data_req_dec & lsu_valid_i | ~data_req_dec & ex_valid_i))",
		lineno=797];
	"561:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d181d0>",
		def_var="['alu_op_a_mux_sel']",
		fillcolor=deepskyblue,
		label="561:AS
alu_op_a_mux_sel = (lsu_addr_incr_req_i)? OP_A_FWD : alu_op_a_mux_sel_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['lsu_addr_incr_req_i', 'OP_A_FWD', 'alu_op_a_mux_sel_dec']"];
	"561:AS" -> "565:AL";
	"609:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d42c50>",
		def_var="['rfvi_reg_rdata_ra_o']",
		fillcolor=deepskyblue,
		label="609:AS
rfvi_reg_rdata_ra_o = regfile_rdata_a;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_rdata_a']"];
	"730:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f650>",
		def_var="['alu_operator_ex_o']",
		fillcolor=deepskyblue,
		label="730:AS
alu_operator_ex_o = alu_operator;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_operator']"];
	"753:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f223781a5d0>",
		fillcolor=turquoise,
		label="753:BL
id_wb_fsm_ns = id_wb_fsm_cs;
instr_multicycle_done_n = instr_multicycle_done_q;
regfile_we_wb = 1'b0;
stall_lsu = 1'b0;
stall_\
multdiv = 1'b0;
stall_jump = 1'b0;
stall_branch = 1'b0;
branch_set_n = 1'b0;
perf_branch_o = 1'b0;
instr_ret_o = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22378197d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22378199d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237819b50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237819c90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237819e10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237819f50>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781a110>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781a290>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781a410>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781a550>]",
		style=filled,
		typ=Block];
	"753:BL" -> "764:CS"	 [cond="[]",
		lineno=None];
	"Leaf_753:AL"	 [def_var="['id_wb_fsm_ns', 'stall_branch', 'perf_branch_o', 'instr_ret_o', 'branch_set_n', 'stall_multdiv', 'stall_lsu', 'stall_jump', 'regfile_\
we_wb', 'instr_multicycle_done_n']",
		label="Leaf_753:AL"];
	"773:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"576:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3abd0>",
		fillcolor=lightcyan,
		label="576:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"576:CA" -> "576:BS"	 [cond="[]",
		lineno=None];
	"737:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783d210>",
		def_var="['multdiv_operand_a_ex_o']",
		fillcolor=deepskyblue,
		label="737:AS
multdiv_operand_a_ex_o = regfile_rdata_a;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_rdata_a']"];
	"742:IF" -> "742:BL"	 [cond="['rst_ni']",
		label="(!rst_ni)",
		lineno=742];
	"747:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f22378193d0>",
		fillcolor=turquoise,
		label="747:BL
id_wb_fsm_cs <= id_wb_fsm_ns;
branch_set_q <= branch_set_n;
instr_multicycle_done_q <= instr_multicycle_done_n;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f2237819250>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f2237819410>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f22378195d0>]",
		style=filled,
		typ=Block];
	"742:IF" -> "747:BL"	 [cond="['rst_ni']",
		label="!((!rst_ni))",
		lineno=742];
	"747:BL" -> "Leaf_741:AL"	 [cond="[]",
		lineno=None];
	"571:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3a790>",
		fillcolor=lightcyan,
		label="571:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"571:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a890>",
		fillcolor=cadetblue,
		label="571:BS
alu_operand_a = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3a890>]",
		style=filled,
		typ=BlockingSubstitution];
	"571:CA" -> "571:BS"	 [cond="[]",
		lineno=None];
	"768:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f223781ae50>",
		fillcolor=turquoise,
		label="768:BL
id_wb_fsm_ns = WAIT_MULTICYCLE;
stall_lsu = 1'b1;
instr_multicycle_done_n = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781ad10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f223781ae90>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849050>]",
		style=filled,
		typ=Block];
	"768:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"610:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d42e10>",
		def_var="['rfvi_reg_raddr_rb_o']",
		fillcolor=deepskyblue,
		label="610:AS
rfvi_reg_raddr_rb_o = regfile_raddr_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_raddr_b']"];
	"583:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d2eb50>",
		fillcolor=lightcyan,
		label="583:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"583:CA" -> "583:BS"	 [cond="[]",
		lineno=None];
	"579:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d2e210>",
		fillcolor=lightcyan,
		label="579:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"579:CA" -> "579:BS"	 [cond="[]",
		lineno=None];
	"812:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237830f50>",
		def_var="['instr_ret_compressed_o']",
		fillcolor=deepskyblue,
		label="812:AS
instr_ret_compressed_o = instr_ret_o & instr_is_compressed_i;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_ret_o', 'instr_is_compressed_i']"];
	"567:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d18e10>",
		fillcolor=lightcyan,
		label="567:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"567:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d18f50>",
		fillcolor=cadetblue,
		label="567:BS
alu_operand_a = regfile_rdata_a;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d18f50>]",
		style=filled,
		typ=BlockingSubstitution];
	"567:CA" -> "567:BS"	 [cond="[]",
		lineno=None];
	"574:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237d3aa90>",
		fillcolor=turquoise,
		label="574:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"575:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237d2eb10>",
		fillcolor=linen,
		label="575:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"574:BL" -> "575:CS"	 [cond="[]",
		lineno=None];
	"734:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783fc90>",
		def_var="['div_en_ex_o']",
		fillcolor=deepskyblue,
		label="734:AS
div_en_ex_o = div_en_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['div_en_id']"];
	"580:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d2e410>",
		fillcolor=lightcyan,
		label="580:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"580:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e510>",
		fillcolor=cadetblue,
		label="580:BS
imm_b = imm_j_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2e510>]",
		style=filled,
		typ=BlockingSubstitution];
	"580:CA" -> "580:BS"	 [cond="[]",
		lineno=None];
	"564:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d18910>",
		def_var="['imm_a']",
		fillcolor=deepskyblue,
		label="564:AS
imm_a = (imm_a_mux_sel == IMM_A_Z)? zimm_rs1_type : 1'b0;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['imm_a_mux_sel', 'IMM_A_Z', 'zimm_rs1_type']"];
	"564:AS" -> "565:AL";
	"Leaf_565:AL" -> "731:AS";
	"778:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237849750>",
		fillcolor=lightcyan,
		label="778:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"778:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237827150>",
		fillcolor=turquoise,
		label="778:BL
id_wb_fsm_ns = (branch_decision_i)? WAIT_MULTICYCLE : IDLE;
stall_branch = branch_decision_i;
instr_multicycle_done_n = ~\
branch_decision_i;
branch_set_n = branch_decision_i;
perf_branch_o = 1'b1;
instr_ret_o = ~branch_decision_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849a90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849c10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849e10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237849fd0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237827190>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237827350>]",
		style=filled,
		typ=Block];
	"778:CA" -> "778:BL"	 [cond="[]",
		lineno=None];
	"566:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237d3a710>",
		fillcolor=linen,
		label="566:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"566:CS" -> "568:CA"	 [cond="['alu_op_a_mux_sel']",
		label=alu_op_a_mux_sel,
		lineno=566];
	"566:CS" -> "569:CA"	 [cond="['alu_op_a_mux_sel']",
		label=alu_op_a_mux_sel,
		lineno=566];
	"566:CS" -> "570:CA"	 [cond="['alu_op_a_mux_sel']",
		label=alu_op_a_mux_sel,
		lineno=566];
	"566:CS" -> "571:CA"	 [cond="['alu_op_a_mux_sel']",
		label=alu_op_a_mux_sel,
		lineno=566];
	"566:CS" -> "567:CA"	 [cond="['alu_op_a_mux_sel']",
		label=alu_op_a_mux_sel,
		lineno=566];
	"593:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d42110>",
		fillcolor=cadetblue,
		label="593:BS
regfile_wdata = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d42110>]",
		style=filled,
		typ=BlockingSubstitution];
	"593:BS" -> "Leaf_588:AL"	 [cond="[]",
		lineno=None];
	"590:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fa10>",
		fillcolor=cadetblue,
		label="590:BS
regfile_wdata = regfile_wdata_ex_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fa10>]",
		style=filled,
		typ=BlockingSubstitution];
	"590:BS" -> "Leaf_588:AL"	 [cond="[]",
		lineno=None];
	"797:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"592:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d1fdd0>",
		fillcolor=lightcyan,
		label="592:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"592:CA" -> "592:BS"	 [cond="[]",
		lineno=None];
	"Leaf_588:AL" -> "613:AS";
	"659:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d28c50>",
		def_var="['illegal_insn_o']",
		fillcolor=deepskyblue,
		label="659:AS
illegal_insn_o = instr_valid_i & (illegal_insn_dec | illegal_csr_insn_i);",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['instr_valid_i', 'illegal_insn_dec', 'illegal_csr_insn_i']"];
	"778:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"567:BS" -> "Leaf_565:AL"	 [cond="[]",
		lineno=None];
	"803:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"581:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d2e650>",
		fillcolor=lightcyan,
		label="581:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"581:CA" -> "581:BS"	 [cond="[]",
		lineno=None];
	"575:CS" -> "578:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "576:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "583:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "579:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "580:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "581:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"577:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d3ae10>",
		fillcolor=lightcyan,
		label="577:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "577:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"582:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d2e990>",
		fillcolor=lightcyan,
		label="582:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "582:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"726:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237833f10>",
		def_var="['data_we_ex_o']",
		fillcolor=deepskyblue,
		label="726:AS
data_we_ex_o = data_we_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_we_id']"];
	"Leaf_753:AL" -> "587:AS";
	"Leaf_753:AL" -> "741:AL";
	"Leaf_753:AL" -> "812:AS";
	"562:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d18490>",
		def_var="['alu_op_b_mux_sel']",
		fillcolor=deepskyblue,
		label="562:AS
alu_op_b_mux_sel = (lsu_addr_incr_req_i)? OP_B_IMM : alu_op_b_mux_sel_dec;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['lsu_addr_incr_req_i', 'OP_B_IMM', 'alu_op_b_mux_sel_dec']"];
	"562:AS" -> "586:AS";
	"809:BS" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"593:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d1ffd0>",
		fillcolor=lightcyan,
		label="593:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"593:CA" -> "593:BS"	 [cond="[]",
		lineno=None];
	"577:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3af10>",
		fillcolor=cadetblue,
		label="577:BS
imm_b = imm_s_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d3af10>]",
		style=filled,
		typ=BlockingSubstitution];
	"577:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"735:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783fe50>",
		def_var="['multdiv_operator_ex_o']",
		fillcolor=deepskyblue,
		label="735:AS
multdiv_operator_ex_o = multdiv_operator;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['multdiv_operator']"];
	"753:AL" -> "753:BL"	 [cond="[]",
		lineno=None];
	"591:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fcd0>",
		fillcolor=cadetblue,
		label="591:BS
regfile_wdata = regfile_wdata_lsu_i;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d1fcd0>]",
		style=filled,
		typ=BlockingSubstitution];
	"591:BS" -> "Leaf_588:AL"	 [cond="[]",
		lineno=None];
	"786:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237827710>",
		fillcolor=turquoise,
		label="786:BL
id_wb_fsm_ns = WAIT_MULTICYCLE;
stall_jump = 1'b1;
instr_multicycle_done_n = 1'b0;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22378275d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237827750>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22378278d0>]",
		style=filled,
		typ=Block];
	"786:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"727:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783f110>",
		def_var="['data_type_ex_o']",
		fillcolor=deepskyblue,
		label="727:AS
data_type_ex_o = data_type_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['data_type_id']"];
	"589:CS" -> "592:CA"	 [cond="['regfile_wdata_sel']",
		label=regfile_wdata_sel,
		lineno=589];
	"589:CS" -> "593:CA"	 [cond="['regfile_wdata_sel']",
		label=regfile_wdata_sel,
		lineno=589];
	"591:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d1fb90>",
		fillcolor=lightcyan,
		label="591:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"589:CS" -> "591:CA"	 [cond="['regfile_wdata_sel']",
		label=regfile_wdata_sel,
		lineno=589];
	"590:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237d1f8d0>",
		fillcolor=lightcyan,
		label="590:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"589:CS" -> "590:CA"	 [cond="['regfile_wdata_sel']",
		label=regfile_wdata_sel,
		lineno=589];
	"612:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d151d0>",
		def_var="['rfvi_reg_waddr_rd_o']",
		fillcolor=deepskyblue,
		label="612:AS
rfvi_reg_waddr_rd_o = regfile_waddr;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_waddr']"];
	"Leaf_574:AL" -> "586:AS";
	"582:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2ea90>",
		fillcolor=cadetblue,
		label="582:BS
imm_b = 32'h4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237d2ea90>]",
		style=filled,
		typ=BlockingSubstitution];
	"582:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"570:BS" -> "Leaf_565:AL"	 [cond="[]",
		lineno=None];
	"724:AS" -> "734:AS";
	"791:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237827ad0>",
		fillcolor=turquoise,
		label="791:BL
instr_multicycle_done_n = 1'b0;
instr_ret_o = 1'b1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237827b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237827c50>]",
		style=filled,
		typ=Block];
	"791:BL" -> "Leaf_753:AL"	 [cond="[]",
		lineno=None];
	"580:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"571:BS" -> "Leaf_565:AL"	 [cond="[]",
		lineno=None];
	"608:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f2237d42a90>",
		def_var="['rfvi_reg_raddr_ra_o']",
		fillcolor=deepskyblue,
		label="608:AS
rfvi_reg_raddr_ra_o = regfile_raddr_a;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_raddr_a']"];
	"591:CA" -> "591:BS"	 [cond="[]",
		lineno=None];
	"767:CS" -> "773:CA"	 [cond="[]",
		label="1'b1",
		lineno=767];
	"767:CS" -> "778:CA"	 [cond="[]",
		label="1'b1",
		lineno=767];
	"786:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237827310>",
		fillcolor=lightcyan,
		label="786:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"767:CS" -> "786:CA"	 [cond="[]",
		label="1'b1",
		lineno=767];
	"791:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237827890>",
		fillcolor=lightcyan,
		label="791:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"767:CS" -> "791:CA"	 [cond="[]",
		label="1'b1",
		lineno=767];
	"768:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f223781ab10>",
		fillcolor=lightcyan,
		label="768:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"767:CS" -> "768:CA"	 [cond="[]",
		label="1'b1",
		lineno=767];
	"733:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783fb50>",
		def_var="['mult_en_ex_o']",
		fillcolor=deepskyblue,
		label="733:AS
mult_en_ex_o = mult_en_id;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['mult_en_id']"];
	"723:AS" -> "733:AS";
	"577:CA" -> "577:BS"	 [cond="[]",
		lineno=None];
	"574:AL" -> "574:BL"	 [cond="[]",
		lineno=None];
	"565:BL" -> "566:CS"	 [cond="[]",
		lineno=None];
	"786:CA" -> "786:BL"	 [cond="[]",
		lineno=None];
	"738:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f223783d3d0>",
		def_var="['multdiv_operand_b_ex_o']",
		fillcolor=deepskyblue,
		label="738:AS
multdiv_operand_b_ex_o = regfile_rdata_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['regfile_rdata_b']"];
	"590:CA" -> "590:BS"	 [cond="[]",
		lineno=None];
	"Leaf_741:AL" -> "721:AS";
	"Leaf_741:AL" -> "753:AL";
	"582:CA" -> "582:BS"	 [cond="[]",
		lineno=None];
	"791:CA" -> "791:BL"	 [cond="[]",
		lineno=None];
	"768:CA" -> "768:BL"	 [cond="[]",
		lineno=None];
}
