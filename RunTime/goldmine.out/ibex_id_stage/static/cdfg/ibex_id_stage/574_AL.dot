strict digraph "" {
	node [label="\N"];
	"578:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237101910>",
		fillcolor=lightcyan,
		label="578:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"578:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237101a10>",
		fillcolor=cadetblue,
		label="578:BS
imm_b = imm_b_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237101a10>]",
		style=filled,
		typ=BlockingSubstitution];
	"578:CA" -> "578:BS"	 [cond="[]",
		lineno=None];
	"577:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22371052d0>",
		fillcolor=cadetblue,
		label="577:BS
imm_b = imm_s_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f22371052d0>]",
		style=filled,
		typ=BlockingSubstitution];
	"Leaf_574:AL"	 [def_var="['imm_b']",
		label="Leaf_574:AL"];
	"577:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"574:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f2237101ed0>",
		fillcolor=turquoise,
		label="574:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"575:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f2237101f50>",
		fillcolor=linen,
		label="575:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"574:BL" -> "575:CS"	 [cond="[]",
		lineno=None];
	"576:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105110>",
		fillcolor=cadetblue,
		label="576:BS
imm_b = imm_i_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105110>]",
		style=filled,
		typ=BlockingSubstitution];
	"576:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"581:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105790>",
		fillcolor=lightcyan,
		label="581:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"581:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237101c50>",
		fillcolor=cadetblue,
		label="581:BS
imm_b = (instr_is_compressed_i)? 32'h2 : 32'h4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237101c50>]",
		style=filled,
		typ=BlockingSubstitution];
	"581:CA" -> "581:BS"	 [cond="[]",
		lineno=None];
	"578:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"575:CS" -> "578:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"575:CS" -> "581:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"582:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105850>",
		fillcolor=lightcyan,
		label="582:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "582:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"579:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105410>",
		fillcolor=lightcyan,
		label="579:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "579:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"580:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f22371055d0>",
		fillcolor=lightcyan,
		label="580:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "580:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"583:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105a50>",
		fillcolor=lightcyan,
		label="583:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "583:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"576:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105090>",
		fillcolor=lightcyan,
		label="576:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "576:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"577:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f2237105250>",
		fillcolor=lightcyan,
		label="577:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"575:CS" -> "577:CA"	 [cond="['imm_b_mux_sel']",
		label=imm_b_mux_sel,
		lineno=575];
	"580:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105650>",
		fillcolor=cadetblue,
		label="580:BS
imm_b = imm_j_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105650>]",
		style=filled,
		typ=BlockingSubstitution];
	"580:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"579:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105490>",
		fillcolor=cadetblue,
		label="579:BS
imm_b = imm_u_type;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105490>]",
		style=filled,
		typ=BlockingSubstitution];
	"579:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"582:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105910>",
		fillcolor=cadetblue,
		label="582:BS
imm_b = 32'h4;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105910>]",
		style=filled,
		typ=BlockingSubstitution];
	"582:CA" -> "582:BS"	 [cond="[]",
		lineno=None];
	"579:CA" -> "579:BS"	 [cond="[]",
		lineno=None];
	"580:CA" -> "580:BS"	 [cond="[]",
		lineno=None];
	"581:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"583:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105a90>",
		fillcolor=cadetblue,
		label="583:BS
imm_b = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f2237105a90>]",
		style=filled,
		typ=BlockingSubstitution];
	"583:CA" -> "583:BS"	 [cond="[]",
		lineno=None];
	"576:CA" -> "576:BS"	 [cond="[]",
		lineno=None];
	"582:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"583:BS" -> "Leaf_574:AL"	 [cond="[]",
		lineno=None];
	"574:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f2237105c10>",
		clk_sens=False,
		fillcolor=gold,
		label="574:AL",
		sens="['imm_b_type', 'imm_s_type', 'imm_j_type', 'imm_u_type', 'imm_i_type', 'instr_is_compressed_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['imm_b_type', 'imm_s_type', 'imm_j_type', 'imm_u_type', 'imm_b_mux_sel', 'imm_i_type', 'instr_is_compressed_i']"];
	"574:AL" -> "574:BL"	 [cond="[]",
		lineno=None];
	"577:CA" -> "577:BS"	 [cond="[]",
		lineno=None];
}
