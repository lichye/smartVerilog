strict digraph "" {
	CSR_OP_CLEAR -> csr_op	 [weight=1.0];
	CSR_OP_CLEAR -> csr_op_o	 [weight=1.0];
	sv2v_cast_F99D1 -> alu_operator_o	 [weight=1.0];
	MD_OP_MULH -> multdiv_operator_o	 [weight=3.0];
	MD_OP_MULL -> multdiv_operator_o	 [weight=2.0];
	IMM_B_INCR_PC -> imm_b_mux_sel_o	 [weight=3.0];
	instr -> div_en_o	 [weight=12.0];
	instr -> imm_s_type_o	 [weight=1.0];
	instr -> ebrk_insn_o	 [weight=2.0];
	instr -> jump_set_o	 [weight=1.0];
	instr -> csr_pipe_flush_o	 [weight=6.0];
	instr -> alu_op_a_mux_sel_o	 [weight=13.0];
	instr -> dret_insn_o	 [weight=2.0];
	instr -> csr_illegal	 [weight=2.0];
	instr -> csr_op	 [weight=6.0];
	instr -> alu_operator_o	 [weight=75.0];
	instr -> wfi_insn_o	 [weight=2.0];
	instr -> data_sign_extension_o	 [weight=1.0];
	instr -> regfile_waddr_o	 [weight=1.0];
	instr -> alu_op_b_mux_sel_o	 [weight=16.0];
	instr -> multdiv_operator_o	 [weight=24.0];
	instr -> opcode	 [weight=1.0];
	instr -> csr_access_o	 [weight=6.0];
	instr -> jump_in_dec_o	 [weight=1.0];
	instr -> regfile_we	 [weight=8.0];
	instr -> imm_i_type_o	 [weight=1.0];
	instr -> imm_b_mux_sel_o	 [weight=8.0];
	instr -> zimm_rs1_type_o	 [weight=1.0];
	instr -> imm_b_type_o	 [weight=1.0];
	instr -> regfile_raddr_a_o	 [weight=1.0];
	instr -> mret_insn_o	 [weight=2.0];
	instr -> imm_a_mux_sel_o	 [weight=6.0];
	instr -> csr_op_o	 [weight=1.0];
	instr -> illegal_insn	 [weight=52.0];
	instr -> imm_j_type_o	 [weight=1.0];
	instr -> ecall_insn_o	 [weight=2.0];
	instr -> data_type_o	 [weight=6.0];
	instr -> imm_u_type_o	 [weight=1.0];
	instr -> regfile_wdata_sel_o	 [weight=6.0];
	instr -> regfile_raddr_b_o	 [weight=1.0];
	instr -> multdiv_signed_mode_o	 [weight=24.0];
	instr -> mult_en_o	 [weight=12.0];
	IMM_A_ZERO -> imm_a_mux_sel_o	 [weight=2.0];
	ALU_EQ -> alu_operator_o	 [weight=1.0];
	illegal_reg_rv32e -> regfile_we_o	 [weight=1.0];
	illegal_reg_rv32e -> illegal_insn_o	 [weight=1.0];
	CSR_OP_READ -> csr_pipe_flush_o	 [weight=1.0];
	CSR_OP_READ -> csr_op	 [weight=1.0];
	CSR_OP_READ -> csr_op_o	 [weight=1.0];
	OP_B_REG_B -> illegal_reg_rv32e	 [weight=1.0];
	OP_B_REG_B -> alu_op_b_mux_sel_o	 [weight=22.0];
	alu_op_a_mux_sel_o -> illegal_reg_rv32e	 [weight=1.0];
	ALU_SLL -> alu_operator_o	 [weight=2.0];
	ALU_SLT -> alu_operator_o	 [weight=2.0];
	csr_illegal -> illegal_insn	 [weight=1.0];
	IMM_B_J -> imm_b_mux_sel_o	 [weight=1.0];
	ALU_GE -> alu_operator_o	 [weight=1.0];
	IMM_B_I -> imm_b_mux_sel_o	 [weight=23.0];
	ALU_OR -> alu_operator_o	 [weight=2.0];
	IMM_B_B -> imm_b_mux_sel_o	 [weight=1.0];
	MD_OP_REM -> multdiv_operator_o	 [weight=2.0];
	IMM_B_U -> imm_b_mux_sel_o	 [weight=2.0];
	csr_op -> csr_op_o	 [weight=3.0];
	IMM_B_S -> imm_b_mux_sel_o	 [weight=1.0];
	RF_WD_CSR -> regfile_wdata_sel_o	 [weight=1.0];
	instr_new_i -> jump_set_o	 [weight=3.0];
	instr_new_i -> alu_op_a_mux_sel_o	 [weight=6.0];
	instr_new_i -> alu_operator_o	 [weight=5.0];
	instr_new_i -> alu_op_b_mux_sel_o	 [weight=6.0];
	instr_new_i -> regfile_we	 [weight=5.0];
	instr_new_i -> imm_b_mux_sel_o	 [weight=5.0];
	ALU_LTU -> alu_operator_o	 [weight=1.0];
	regfile_waddr_o -> illegal_reg_rv32e	 [weight=1.0];
	alu_op_b_mux_sel_o -> illegal_reg_rv32e	 [weight=1.0];
	ALU_LT -> alu_operator_o	 [weight=1.0];
	opcode -> div_en_o	 [weight=4.0];
	opcode -> data_we_o	 [weight=6.0];
	opcode -> ebrk_insn_o	 [weight=1.0];
	opcode -> jump_set_o	 [weight=3.0];
	opcode -> alu_op_a_mux_sel_o	 [weight=60.0];
	opcode -> dret_insn_o	 [weight=1.0];
	opcode -> csr_illegal	 [weight=1.0];
	opcode -> csr_op	 [weight=3.0];
	opcode -> alu_operator_o	 [weight=53.0];
	opcode -> wfi_insn_o	 [weight=1.0];
	opcode -> data_sign_extension_o	 [weight=4.0];
	opcode -> alu_op_b_mux_sel_o	 [weight=65.0];
	opcode -> multdiv_operator_o	 [weight=8.0];
	opcode -> data_req_o	 [weight=10.0];
	opcode -> csr_access_o	 [weight=6.0];
	opcode -> jump_in_dec_o	 [weight=6.0];
	opcode -> regfile_we	 [weight=50.0];
	opcode -> branch_in_dec_o	 [weight=9.0];
	opcode -> imm_b_mux_sel_o	 [weight=30.0];
	opcode -> mret_insn_o	 [weight=1.0];
	opcode -> imm_a_mux_sel_o	 [weight=7.0];
	opcode -> illegal_insn	 [weight=28.0];
	opcode -> ecall_insn_o	 [weight=1.0];
	opcode -> data_type_o	 [weight=10.0];
	opcode -> regfile_wdata_sel_o	 [weight=10.0];
	opcode -> multdiv_signed_mode_o	 [weight=8.0];
	opcode -> mult_en_o	 [weight=4.0];
	ALU_GEU -> alu_operator_o	 [weight=1.0];
	ALU_NE -> alu_operator_o	 [weight=1.0];
	csr_access_o -> csr_pipe_flush_o	 [weight=3.0];
	ALU_SLTU -> alu_operator_o	 [weight=3.0];
	regfile_we -> regfile_we_o	 [weight=1.0];
	regfile_we -> illegal_reg_rv32e	 [weight=1.0];
	ALU_SRA -> alu_operator_o	 [weight=2.0];
	ALU_SRL -> alu_operator_o	 [weight=2.0];
	CSR_DCSR -> csr_pipe_flush_o	 [weight=1.0];
	CSR_MIE -> csr_pipe_flush_o	 [weight=1.0];
	sv2v_cast_DB892 -> opcode	 [weight=1.0];
	ALU_ADD -> alu_operator_o	 [weight=29.0];
	RF_WD_LSU -> regfile_wdata_sel_o	 [weight=1.0];
	sv2v_cast_290A1 -> csr_pipe_flush_o	 [weight=6.0];
	OP_A_IMM -> alu_op_a_mux_sel_o	 [weight=3.0];
	OP_A_CURRPC -> alu_op_a_mux_sel_o	 [weight=6.0];
	CSR_DPC -> csr_pipe_flush_o	 [weight=1.0];
	ALU_SUB -> alu_operator_o	 [weight=1.0];
	illegal_c_insn_i -> illegal_insn	 [weight=1.0];
	RF_WD_EX -> regfile_wdata_sel_o	 [weight=1.0];
	regfile_raddr_a_o -> illegal_reg_rv32e	 [weight=1.0];
	CSR_OP_WRITE -> csr_pipe_flush_o	 [weight=2.0];
	CSR_OP_WRITE -> csr_op	 [weight=1.0];
	csr_op_o -> csr_pipe_flush_o	 [weight=5.0];
	ALU_XOR -> alu_operator_o	 [weight=2.0];
	illegal_insn -> div_en_o	 [weight=1.0];
	illegal_insn -> data_we_o	 [weight=1.0];
	illegal_insn -> jump_set_o	 [weight=1.0];
	illegal_insn -> data_req_o	 [weight=1.0];
	illegal_insn -> csr_access_o	 [weight=1.0];
	illegal_insn -> jump_in_dec_o	 [weight=1.0];
	illegal_insn -> regfile_we	 [weight=1.0];
	illegal_insn -> branch_in_dec_o	 [weight=1.0];
	illegal_insn -> illegal_insn_o	 [weight=1.0];
	illegal_insn -> mult_en_o	 [weight=1.0];
	OP_A_REG_A -> illegal_reg_rv32e	 [weight=1.0];
	OP_A_REG_A -> alu_op_a_mux_sel_o	 [weight=47.0];
	OP_B_IMM -> alu_op_b_mux_sel_o	 [weight=39.0];
	MD_OP_DIV -> multdiv_operator_o	 [weight=2.0];
	ALU_AND -> alu_operator_o	 [weight=2.0];
	IMM_A_Z -> imm_a_mux_sel_o	 [weight=1.0];
	regfile_raddr_b_o -> illegal_reg_rv32e	 [weight=1.0];
	instr_rdata_i -> instr	 [weight=1.0];
	CSR_MSTATUS -> csr_pipe_flush_o	 [weight=1.0];
	CSR_DSCRATCH0 -> csr_pipe_flush_o	 [weight=1.0];
	CSR_DSCRATCH1 -> csr_pipe_flush_o	 [weight=1.0];
	CSR_OP_SET -> csr_pipe_flush_o	 [weight=2.0];
	CSR_OP_SET -> csr_op	 [weight=1.0];
	CSR_OP_SET -> csr_op_o	 [weight=1.0];
}
