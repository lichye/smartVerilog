strict digraph "" {
	accum_window_q -> op_remainder	 [weight=1.0];
	accum_window_q -> accum_window_d	 [weight=3.0];
	accum_window_q -> multdiv_result_o	 [weight=1.0];
	accum_window_q -> alu_operand_a_o	 [weight=2.0];
	accum_window_q -> is_greater_equal	 [weight=1.0];
	accum_window_q -> alu_operand_b_o	 [weight=1.0];
	res_adder_h -> accum_window_d	 [weight=1.0];
	res_adder_h -> next_reminder	 [weight=1.0];
	res_adder_h -> is_greater_equal	 [weight=1.0];
	rem_change_sign -> accum_window_d	 [weight=1.0];
	op_numerator_q -> accum_window_d	 [weight=2.0];
	op_numerator_q -> op_numerator_d	 [weight=1.0];
	res_adder_l -> accum_window_d	 [weight=3.0];
	res_adder_l -> multdiv_result_o	 [weight=1.0];
	MD_OP_MULL -> valid_o	 [weight=1.0];
	one_shift -> next_quotient	 [weight=1.0];
	op_remainder -> next_reminder	 [weight=1.0];
	op_b_ext -> op_b_shift_d	 [weight=2.0];
	accum_window_d -> accum_window_q	 [weight=1.0];
	b_0 -> op_a_bw_pp	 [weight=1.0];
	b_0 -> op_a_bw_last_pp	 [weight=1.0];
	md_state_q -> accum_window_d	 [weight=14.0];
	md_state_q -> md_state_d	 [weight=18.0];
	md_state_q -> op_numerator_d	 [weight=1.0];
	md_state_q -> op_b_shift_d	 [weight=5.0];
	md_state_q -> multdiv_state_d	 [weight=7.0];
	md_state_q -> valid_o	 [weight=1.0];
	md_state_q -> alu_operand_a_o	 [weight=5.0];
	md_state_q -> alu_operand_b_o	 [weight=6.0];
	md_state_q -> op_a_shift_d	 [weight=6.0];
	op_a_ext -> accum_window_d	 [weight=4.0];
	op_a_ext -> op_a_shift_d	 [weight=2.0];
	alu_adder_ext_i -> res_adder_h	 [weight=1.0];
	alu_adder_ext_i -> res_adder_l	 [weight=1.0];
	MD_ABS_B -> md_state_d	 [weight=1.0];
	next_reminder -> accum_window_d	 [weight=2.0];
	MD_ABS_A -> md_state_d	 [weight=2.0];
	signed_mode_i -> sign_a	 [weight=1.0];
	signed_mode_i -> sign_b	 [weight=1.0];
	md_state_d -> md_state_q	 [weight=1.0];
	equal_to_zero -> md_state_d	 [weight=2.0];
	MD_OP_MULH -> valid_o	 [weight=1.0];
	op_numerator_d -> op_numerator_q	 [weight=1.0];
	MD_LAST -> md_state_d	 [weight=1.0];
	MD_LAST -> valid_o	 [weight=1.0];
	MD_LAST -> alu_operand_b_o	 [weight=1.0];
	MD_FINISH -> md_state_d	 [weight=3.0];
	MD_FINISH -> valid_o	 [weight=1.0];
	op_b_shift_q -> b_0	 [weight=1.0];
	op_b_shift_q -> op_a_bw_pp	 [weight=1.0];
	op_b_shift_q -> op_b_shift_d	 [weight=3.0];
	op_b_shift_q -> op_a_bw_last_pp	 [weight=1.0];
	op_b_shift_q -> is_greater_equal	 [weight=1.0];
	op_b_shift_q -> alu_operand_b_o	 [weight=1.0];
	MD_COMP -> md_state_d	 [weight=4.0];
	op_a_bw_pp -> alu_operand_b_o	 [weight=2.0];
	MD_IDLE -> md_state_q	 [weight=1.0];
	MD_IDLE -> md_state_d	 [weight=3.0];
	MD_CHANGE_SIGN -> md_state_d	 [weight=2.0];
	multdiv_state_m1 -> accum_window_d	 [weight=1.0];
	multdiv_state_m1 -> multdiv_state_d	 [weight=1.0];
	next_quotient -> accum_window_d	 [weight=1.0];
	next_quotient -> op_a_shift_d	 [weight=1.0];
	div_en_i -> accum_window_d	 [weight=14.0];
	div_en_i -> md_state_d	 [weight=17.0];
	div_en_i -> op_numerator_d	 [weight=1.0];
	div_en_i -> op_b_shift_d	 [weight=5.0];
	div_en_i -> multdiv_state_d	 [weight=7.0];
	div_en_i -> multdiv_result_o	 [weight=1.0];
	div_en_i -> op_a_shift_d	 [weight=6.0];
	op_b_shift_d -> op_b_shift_q	 [weight=1.0];
	multdiv_state_d -> multdiv_state_q	 [weight=1.0];
	multdiv_state_q -> one_shift	 [weight=1.0];
	multdiv_state_q -> md_state_d	 [weight=1.0];
	multdiv_state_q -> multdiv_state_m1	 [weight=1.0];
	multdiv_state_q -> multdiv_state_d	 [weight=1.0];
	div_change_sign -> accum_window_d	 [weight=1.0];
	op_b_i -> op_b_ext	 [weight=1.0];
	op_b_i -> accum_window_d	 [weight=3.0];
	op_b_i -> op_b_shift_d	 [weight=1.0];
	op_b_i -> sign_b	 [weight=1.0];
	op_b_i -> alu_operand_b_o	 [weight=2.0];
	sign_a -> rem_change_sign	 [weight=1.0];
	sign_a -> op_a_ext	 [weight=1.0];
	sign_a -> op_numerator_d	 [weight=1.0];
	sign_a -> div_change_sign	 [weight=1.0];
	sign_b -> op_b_ext	 [weight=1.0];
	sign_b -> op_b_shift_d	 [weight=1.0];
	sign_b -> div_change_sign	 [weight=1.0];
	op_a_bw_last_pp -> alu_operand_b_o	 [weight=1.0];
	op_a_shift_q -> op_a_bw_pp	 [weight=1.0];
	op_a_shift_q -> next_quotient	 [weight=1.0];
	op_a_shift_q -> op_a_bw_last_pp	 [weight=1.0];
	op_a_shift_q -> op_a_shift_d	 [weight=3.0];
	is_greater_equal -> next_reminder	 [weight=1.0];
	is_greater_equal -> next_quotient	 [weight=1.0];
	operator_i -> accum_window_d	 [weight=13.0];
	operator_i -> md_state_d	 [weight=8.0];
	operator_i -> op_b_shift_d	 [weight=4.0];
	operator_i -> valid_o	 [weight=1.0];
	operator_i -> alu_operand_a_o	 [weight=5.0];
	operator_i -> alu_operand_b_o	 [weight=7.0];
	operator_i -> op_a_shift_d	 [weight=5.0];
	mult_en_i -> accum_window_d	 [weight=14.0];
	mult_en_i -> md_state_d	 [weight=17.0];
	mult_en_i -> op_numerator_d	 [weight=1.0];
	mult_en_i -> op_b_shift_d	 [weight=5.0];
	mult_en_i -> multdiv_state_d	 [weight=7.0];
	mult_en_i -> op_a_shift_d	 [weight=6.0];
	op_a_i -> op_a_ext	 [weight=1.0];
	op_a_i -> op_numerator_d	 [weight=1.0];
	op_a_i -> sign_a	 [weight=1.0];
	op_a_i -> alu_operand_b_o	 [weight=1.0];
	rst_ni -> accum_window_q	 [weight=2.0];
	rst_ni -> op_numerator_q	 [weight=2.0];
	rst_ni -> md_state_q	 [weight=2.0];
	rst_ni -> op_b_shift_q	 [weight=2.0];
	rst_ni -> multdiv_state_q	 [weight=2.0];
	rst_ni -> op_a_shift_q	 [weight=2.0];
	alu_adder_i -> accum_window_d	 [weight=2.0];
	alu_adder_i -> op_numerator_d	 [weight=1.0];
	alu_adder_i -> op_b_shift_d	 [weight=1.0];
	op_a_shift_d -> op_a_shift_q	 [weight=1.0];
}
