strict digraph "compose( ,  )" {
	node [label="\N"];
	"444:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee806810>",
		def_var="['div_change_sign']",
		fillcolor=deepskyblue,
		label="444:AS
div_change_sign = sign_a ^ sign_b;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sign_a', 'sign_b']"];
	"464:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f65ee7fa150>",
		clk_sens=False,
		fillcolor=gold,
		label="464:AL",
		sens="['accum_window_q', 'res_adder_h', 'rem_change_sign', 'div_change_sign', 'res_adder_l', 'op_b_ext', 'md_state_q', 'op_a_ext', 'MD_\
ABS_B', 'next_reminder', 'MD_ABS_A', 'equal_to_zero', 'alu_adder_i', 'MD_LAST', 'MD_FINISH', 'op_b_shift_q', 'MD_CHANGE_SIGN', '\
MD_IDLE', 'MD_COMP', 'multdiv_state_m1', 'next_quotient', 'op_a_i', 'op_numerator_q', 'op_b_i', 'sign_a', 'sign_b', 'op_a_shift_\
q', 'multdiv_state_q']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['accum_window_q', 'res_adder_h', 'rem_change_sign', 'div_change_sign', 'res_adder_l', 'op_b_ext', 'md_state_q', 'op_a_ext', 'MD_\
ABS_B', 'next_reminder', 'MD_ABS_A', 'equal_to_zero', 'alu_adder_i', 'MD_LAST', 'MD_FINISH', 'op_b_shift_q', 'MD_CHANGE_SIGN', '\
MD_IDLE', 'MD_COMP', 'multdiv_state_m1', 'next_quotient', 'div_en_i', 'op_a_i', 'op_numerator_q', 'op_b_i', 'sign_a', 'sign_b', '\
op_a_shift_q', 'operator_i', 'mult_en_i', 'multdiv_state_q']"];
	"444:AS" -> "464:AL";
	"554:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2ef8d0>",
		fillcolor=lightcyan,
		label="554:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"554:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2efa50>",
		fillcolor=cadetblue,
		label="554:BS
md_state_d = MD_IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2efa50>]",
		style=filled,
		typ=BlockingSubstitution];
	"554:CA" -> "554:BS"	 [cond="[]",
		lineno=None];
	"503:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f51d0>",
		fillcolor=turquoise,
		label="503:BL
accum_window_d = { 32'h0, op_numerator_q[31] };
op_b_shift_d = (sign_b)? alu_adder_i : op_b_i;
md_state_d = MD_COMP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815e50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5150>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5250>]",
		style=filled,
		typ=Block];
	"Leaf_464:AL"	 [def_var="['op_numerator_d', 'multdiv_state_d', 'op_b_shift_d', 'md_state_d', 'accum_window_d', 'op_a_shift_d']",
		label="Leaf_464:AL"];
	"503:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"508:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f5510>",
		fillcolor=turquoise,
		label="508:BL
multdiv_state_d = multdiv_state_m1;
md_state_d = (multdiv_state_q == 5'd1)? MD_LAST : MD_COMP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f54d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f3bd0>]",
		style=filled,
		typ=Block];
	"510:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65ee7f33d0>",
		fillcolor=linen,
		label="510:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"508:BL" -> "510:CS"	 [cond="[]",
		lineno=None];
	"455:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f0f50>",
		fillcolor=turquoise,
		label="455:BL
multdiv_state_q <= multdiv_state_d;
accum_window_q <= accum_window_d;
op_b_shift_q <= op_b_shift_d;
op_a_shift_q <= op_a_\
shift_d;
op_numerator_q <= op_numerator_d;
md_state_q <= md_state_d;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee7f0890>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f65ee7f0a50>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee7f0c10>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f65ee7f0dd0>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee7f0f90>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f65ee7fa110>]",
		style=filled,
		typ=Block];
	"Leaf_446:AL"	 [def_var="['accum_window_q', 'md_state_q', 'op_b_shift_q', 'op_a_shift_q', 'multdiv_state_q', 'op_numerator_q']",
		label="Leaf_446:AL"];
	"455:BL" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"446:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f65ee806b90>",
		clk_sens=True,
		fillcolor=gold,
		label="446:AL",
		sens="['clk_i', 'rst_ni']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['op_numerator_d', 'multdiv_state_d', 'MD_IDLE', 'op_b_shift_d', 'rst_ni', 'md_state_d', 'accum_window_d', 'op_a_shift_d']"];
	"Leaf_464:AL" -> "446:AL";
	"521:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f34d0>",
		fillcolor=lightcyan,
		label="521:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"521:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f3950>",
		fillcolor=turquoise,
		label="521:BL
accum_window_d = { next_reminder[31:0], op_numerator_q[multdiv_state_m1] };
op_a_shift_d = next_quotient;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f3890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f3ad0>]",
		style=filled,
		typ=Block];
	"521:CA" -> "521:BL"	 [cond="[]",
		lineno=None];
	"407:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65eeaa1350>",
		fillcolor=linen,
		label="407:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"416:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea86890>",
		fillcolor=lightcyan,
		label="416:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CS" -> "416:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=407];
	"420:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea86e10>",
		fillcolor=lightcyan,
		label="420:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CS" -> "420:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=407];
	"412:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea86310>",
		fillcolor=lightcyan,
		label="412:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CS" -> "412:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=407];
	"408:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea9ad90>",
		fillcolor=lightcyan,
		label="408:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CS" -> "408:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=407];
	"424:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eeaa1450>",
		fillcolor=lightcyan,
		label="424:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CS" -> "424:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=407];
	"555:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2efc10>",
		fillcolor=cadetblue,
		label="555:BS
md_state_d = 1'bX;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2efc10>]",
		style=filled,
		typ=BlockingSubstitution];
	"555:BS" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"491:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee803e90>",
		fillcolor=lightcyan,
		label="491:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"491:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee815190>",
		fillcolor=turquoise,
		label="491:BL
accum_window_d = op_a_ext;
md_state_d = (equal_to_zero)? MD_FINISH : MD_ABS_A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee8151d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815450>]",
		style=filled,
		typ=Block];
	"491:CA" -> "491:BL"	 [cond="[]",
		lineno=None];
	"416:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eea86b50>",
		fillcolor=turquoise,
		label="416:BL
alu_operand_a_o = { 32'h0, 1'b1 };
alu_operand_b_o = { ~op_b_i, 1'b1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea86b10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea86d50>]",
		style=filled,
		typ=Block];
	"416:CA" -> "416:BL"	 [cond="[]",
		lineno=None];
	"420:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eeaa10d0>",
		fillcolor=turquoise,
		label="420:BL
alu_operand_a_o = { 32'h0, 1'b1 };
alu_operand_b_o = { ~accum_window_q[31:0], 1'b1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eeaa1090>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eeaa1410>]",
		style=filled,
		typ=Block];
	"Leaf_401:AL"	 [def_var="['alu_operand_a_o', 'alu_operand_b_o', 'multdiv_result_o']",
		label="Leaf_401:AL"];
	"420:BL" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"538:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee2f3850>",
		fillcolor=turquoise,
		label="538:BL
accum_window_d = next_quotient;
md_state_d = MD_CHANGE_SIGN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3a10>]",
		style=filled,
		typ=Block];
	"538:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"498:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee815a90>",
		fillcolor=turquoise,
		label="498:BL
op_a_shift_d = 1'sb0;
op_numerator_d = (sign_a)? alu_adder_i : op_a_i;
md_state_d = MD_ABS_B;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815750>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815a10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815b10>]",
		style=filled,
		typ=Block];
	"498:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"407:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea9ab50>",
		fillcolor=lightcyan,
		label="407:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"407:CA" -> "407:CS"	 [cond="[]",
		lineno=None];
	"405:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9a790>",
		fillcolor=cadetblue,
		label="405:BS
alu_operand_b_o = op_a_bw_pp;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9a790>]",
		style=filled,
		typ=BlockingSubstitution];
	"405:BS" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"508:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f5210>",
		fillcolor=lightcyan,
		label="508:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"508:CA" -> "508:BL"	 [cond="[]",
		lineno=None];
	"481:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee803910>",
		fillcolor=turquoise,
		label="481:BL
op_a_shift_d = op_a_ext;
accum_window_d = { 1'b1, ~(op_a_ext[32] & op_b_i[0]), op_a_ext[31:1] & { 31{ op_b_i[0] } } };
op_\
b_shift_d = op_b_ext >> 1;
md_state_d = MD_COMP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7ebf50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee803690>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee803890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee8039d0>]",
		style=filled,
		typ=Block];
	"481:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"432:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee818310>",
		def_var="['one_shift']",
		fillcolor=deepskyblue,
		label="432:AS
one_shift = { 32'b0, 1'b1 } << multdiv_state_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['multdiv_state_q']"];
	"Leaf_446:AL" -> "432:AS";
	"431:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65eeaa1f90>",
		def_var="['is_greater_equal']",
		fillcolor=deepskyblue,
		label="431:AS
is_greater_equal = ((accum_window_q[31] ^ op_b_shift_q[31]) == 1'b0)? res_adder_h[31] == 1'b0 : accum_window_q[31];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['accum_window_q', 'op_b_shift_q', 'res_adder_h', 'accum_window_q']"];
	"Leaf_446:AL" -> "431:AS";
	"443:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee806610>",
		def_var="['multdiv_state_m1']",
		fillcolor=deepskyblue,
		label="443:AS
multdiv_state_m1 = multdiv_state_q - 5'h1;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['multdiv_state_q']"];
	"Leaf_446:AL" -> "443:AS";
	"558:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee2efd90>",
		def_var="['valid_o']",
		fillcolor=deepskyblue,
		label="558:AS
valid_o = (md_state_q == MD_FINISH) | (md_state_q == MD_LAST) & ((operator_i == MD_OP_MULL) | (operator_i == MD_OP_MULH));",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['md_state_q', 'MD_FINISH', 'md_state_q', 'MD_LAST', 'operator_i', 'MD_OP_MULL', 'operator_i', 'MD_OP_MULH']"];
	"Leaf_446:AL" -> "558:AS";
	"Leaf_446:AL" -> "464:AL";
	"437:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee7e8850>",
		def_var="['op_a_bw_last_pp']",
		fillcolor=deepskyblue,
		label="437:AS
op_a_bw_last_pp = { op_a_shift_q[32] & op_b_shift_q[0], ~(op_a_shift_q[31:0] & b_0) };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_a_shift_q', 'op_b_shift_q', 'op_a_shift_q', 'b_0']"];
	"Leaf_446:AL" -> "437:AS";
	"436:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee7e8290>",
		def_var="['op_a_bw_pp']",
		fillcolor=deepskyblue,
		label="436:AS
op_a_bw_pp = { ~(op_a_shift_q[32] & op_b_shift_q[0]), op_a_shift_q[31:0] & b_0 };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_a_shift_q', 'op_b_shift_q', 'op_a_shift_q', 'b_0']"];
	"Leaf_446:AL" -> "436:AS";
	"442:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee806390>",
		def_var="['op_remainder']",
		fillcolor=deepskyblue,
		label="442:AS
op_remainder = accum_window_q[32:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['accum_window_q']"];
	"Leaf_446:AL" -> "442:AS";
	"434:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee818a10>",
		def_var="['next_quotient']",
		fillcolor=deepskyblue,
		label="434:AS
next_quotient = (is_greater_equal)? op_a_shift_q | one_shift : op_a_shift_q;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['is_greater_equal', 'op_a_shift_q', 'one_shift', 'op_a_shift_q']"];
	"Leaf_446:AL" -> "434:AS";
	"435:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee818c10>",
		def_var="['b_0']",
		fillcolor=deepskyblue,
		label="435:AS
b_0 = { 32{ op_b_shift_q[0] } };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_b_shift_q']"];
	"Leaf_446:AL" -> "435:AS";
	"401:AL"	 [ast="<pyverilog.vparser.ast.Always object at 0x7f65eeaa2f90>",
		clk_sens=False,
		fillcolor=gold,
		label="401:AL",
		sens="['accum_window_q', 'md_state_q', 'MD_LAST', 'op_b_shift_q', 'res_adder_l', 'op_a_bw_last_pp', 'div_en_i', 'op_a_bw_pp', 'op_a_i', '\
op_b_i']",
		statements="[]",
		style=filled,
		typ=Always,
		use_var="['accum_window_q', 'md_state_q', 'MD_LAST', 'op_b_shift_q', 'res_adder_l', 'operator_i', 'op_a_bw_last_pp', 'div_en_i', 'op_a_bw_\
pp', 'op_a_i', 'op_b_i']"];
	"Leaf_446:AL" -> "401:AL";
	"406:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea9a910>",
		fillcolor=lightcyan,
		label="406:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"406:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9aa50>",
		fillcolor=cadetblue,
		label="406:BS
alu_operand_b_o = (md_state_q == MD_LAST)? op_a_bw_last_pp : op_a_bw_pp;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9aa50>]",
		style=filled,
		typ=BlockingSubstitution];
	"406:CA" -> "406:BS"	 [cond="[]",
		lineno=None];
	"511:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f5b90>",
		fillcolor=turquoise,
		label="511:BL
accum_window_d = res_adder_l;
op_a_shift_d = op_a_shift_q << 1;
op_b_shift_d = op_b_shift_q >> 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5890>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5b10>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5d50>]",
		style=filled,
		typ=Block];
	"511:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"521:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"446:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee806cd0>",
		fillcolor=turquoise,
		label="446:BL",
		statements="[]",
		style=filled,
		typ=Block];
	"447:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f65ee7f06d0>",
		fillcolor=springgreen,
		label="447:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"446:BL" -> "447:IF"	 [cond="[]",
		lineno=None];
	"550:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2ef390>",
		fillcolor=lightcyan,
		label="550:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"550:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2ef610>",
		fillcolor=cadetblue,
		label="550:BS
accum_window_d = (div_change_sign)? alu_adder_i : accum_window_q;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2ef610>]",
		style=filled,
		typ=BlockingSubstitution];
	"550:CA" -> "550:BS"	 [cond="[]",
		lineno=None];
	"554:BS" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"399:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65eeaa2c10>",
		def_var="['res_adder_l']",
		fillcolor=deepskyblue,
		label="399:AS
res_adder_l = alu_adder_ext_i[32:0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_adder_ext_i']"];
	"399:AS" -> "464:AL";
	"399:AS" -> "401:AL";
	"432:AS" -> "434:AS";
	"491:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"405:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65eea9a690>",
		fillcolor=lightcyan,
		label="405:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"405:CA" -> "405:BS"	 [cond="[]",
		lineno=None];
	"534:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2f32d0>",
		fillcolor=lightcyan,
		label="534:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"534:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee2f34d0>",
		fillcolor=turquoise,
		label="534:BL
accum_window_d = res_adder_l;
md_state_d = MD_IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3490>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3610>]",
		style=filled,
		typ=Block];
	"534:CA" -> "534:BL"	 [cond="[]",
		lineno=None];
	"555:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2efb10>",
		fillcolor=lightcyan,
		label="555:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"555:CA" -> "555:BS"	 [cond="[]",
		lineno=None];
	"516:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f5e10>",
		fillcolor=lightcyan,
		label="516:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"516:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f31d0>",
		fillcolor=turquoise,
		label="516:BL
accum_window_d = res_adder_h;
op_a_shift_d = op_a_shift_q;
op_b_shift_d = op_b_shift_q >> 1;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f5fd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f3210>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7f3450>]",
		style=filled,
		typ=Block];
	"516:CA" -> "516:BL"	 [cond="[]",
		lineno=None];
	"498:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee815590>",
		fillcolor=lightcyan,
		label="498:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"498:CA" -> "498:BL"	 [cond="[]",
		lineno=None];
	"464:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7fabd0>",
		fillcolor=turquoise,
		label="464:BL
multdiv_state_d = multdiv_state_q;
accum_window_d = accum_window_q;
op_b_shift_d = op_b_shift_q;
op_a_shift_d = op_a_shift_\
q;
op_numerator_d = op_numerator_q;
md_state_d = md_state_q;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7fa2d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7fa4d0>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7fa690>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7fa850>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7faa10>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7fab50>]",
		style=filled,
		typ=Block];
	"471:IF"	 [ast="<pyverilog.vparser.ast.IfStatement object at 0x7f65ee7fac50>",
		fillcolor=springgreen,
		label="471:IF",
		statements="[]",
		style=filled,
		typ=IfStatement];
	"464:BL" -> "471:IF"	 [cond="[]",
		lineno=None];
	"542:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee2f3dd0>",
		fillcolor=turquoise,
		label="542:BL
accum_window_d = { 1'b0, next_reminder[31:0] };
md_state_d = MD_CHANGE_SIGN;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3e50>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3f50>]",
		style=filled,
		typ=Block];
	"542:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"424:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eeaa1810>",
		fillcolor=turquoise,
		label="424:BL
alu_operand_a_o = { accum_window_q[31:0], 1'b1 };
alu_operand_b_o = { ~op_b_shift_q[31:0], 1'b1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eeaa1790>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eeaa1ad0>]",
		style=filled,
		typ=Block];
	"424:BL" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"431:AS" -> "434:AS";
	"433:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee818610>",
		def_var="['next_reminder']",
		fillcolor=deepskyblue,
		label="433:AS
next_reminder = (is_greater_equal)? res_adder_h : op_remainder;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['is_greater_equal', 'res_adder_h', 'op_remainder']"];
	"431:AS" -> "433:AS";
	"530:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee2f3090>",
		fillcolor=turquoise,
		label="530:BL
accum_window_d = res_adder_l;
md_state_d = MD_IDLE;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f30d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2f3210>]",
		style=filled,
		typ=Block];
	"530:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"475:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7ebc50>",
		fillcolor=turquoise,
		label="475:BL
op_a_shift_d = op_a_ext << 1;
accum_window_d = { ~(op_a_ext[32] & op_b_i[0]), op_a_ext[31:0] & { 32{ op_b_i[0] } } };
op_\
b_shift_d = op_b_ext >> 1;
md_state_d = MD_COMP;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7eb2d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7eb990>, <\
pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7ebbd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee7ebd10>]",
		style=filled,
		typ=Block];
	"475:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"443:AS" -> "464:AL";
	"547:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2f3fd0>",
		fillcolor=lightcyan,
		label="547:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"547:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee2ef190>",
		fillcolor=turquoise,
		label="547:BL
md_state_d = MD_FINISH;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2ef110>]",
		style=filled,
		typ=Block];
	"547:CA" -> "547:BL"	 [cond="[]",
		lineno=None];
	"549:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65ee2ef550>",
		fillcolor=linen,
		label="549:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"549:CS" -> "550:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=549];
	"551:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2ef710>",
		fillcolor=lightcyan,
		label="551:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"549:CS" -> "551:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=549];
	"464:AL" -> "464:BL"	 [cond="[]",
		lineno=None];
	"503:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee815ad0>",
		fillcolor=lightcyan,
		label="503:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"503:CA" -> "503:BL"	 [cond="[]",
		lineno=None];
	"547:BL" -> "549:CS"	 [cond="[]",
		lineno=None];
	"445:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee806990>",
		def_var="['rem_change_sign']",
		fillcolor=deepskyblue,
		label="445:AS
rem_change_sign = sign_a;",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sign_a']"];
	"445:AS" -> "464:AL";
	"447:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7f04d0>",
		fillcolor=turquoise,
		label="447:BL
multdiv_state_q <= 5'h0;
accum_window_q <= 33'h0;
op_b_shift_q <= 33'h0;
op_a_shift_q <= 33'h0;
op_numerator_q <= 32'h0;
\
md_state_q <= MD_IDLE;",
		statements="[<pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee806ed0>, <pyverilog.vparser.ast.NonblockingSubstitution object \
at 0x7f65ee7f0090>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee7f0210>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f65ee7f0390>, <pyverilog.vparser.ast.NonblockingSubstitution object at 0x7f65ee7f0510>, <pyverilog.vparser.ast.NonblockingSubstitution \
object at 0x7f65ee7f0650>]",
		style=filled,
		typ=Block];
	"447:BL" -> "Leaf_446:AL"	 [cond="[]",
		lineno=None];
	"416:BL" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"420:CA" -> "420:BL"	 [cond="[]",
		lineno=None];
	"538:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2f35d0>",
		fillcolor=lightcyan,
		label="538:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"538:CA" -> "538:BL"	 [cond="[]",
		lineno=None];
	"551:BS"	 [ast="<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2ef990>",
		fillcolor=cadetblue,
		label="551:BS
accum_window_d = (rem_change_sign)? alu_adder_i : accum_window_q;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee2ef990>]",
		style=filled,
		typ=BlockingSubstitution];
	"551:BS" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"487:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee803990>",
		fillcolor=lightcyan,
		label="487:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"487:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee803c90>",
		fillcolor=turquoise,
		label="487:BL
accum_window_d = { 33{ 1'b1 } };
md_state_d = (equal_to_zero)? MD_FINISH : MD_ABS_A;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee803cd0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee803f90>]",
		style=filled,
		typ=Block];
	"487:CA" -> "487:BL"	 [cond="[]",
		lineno=None];
	"412:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eea86610>",
		fillcolor=turquoise,
		label="412:BL
alu_operand_a_o = { 32'h0, 1'b1 };
alu_operand_b_o = { ~op_a_i, 1'b1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea865d0>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea86850>]",
		style=filled,
		typ=Block];
	"412:CA" -> "412:BL"	 [cond="[]",
		lineno=None];
	"400:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65eeaa2e50>",
		def_var="['res_adder_h']",
		fillcolor=deepskyblue,
		label="400:AS
res_adder_h = alu_adder_ext_i[33:1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['alu_adder_ext_i']"];
	"400:AS" -> "431:AS";
	"400:AS" -> "464:AL";
	"400:AS" -> "433:AS";
	"401:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eea9a4d0>",
		fillcolor=turquoise,
		label="401:BL
alu_operand_a_o = accum_window_q;
multdiv_result_o = (div_en_i)? accum_window_q[31:0] : res_adder_l;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9a150>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9a490>]",
		style=filled,
		typ=Block];
	"404:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65eea9abd0>",
		fillcolor=linen,
		label="404:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"401:BL" -> "404:CS"	 [cond="[]",
		lineno=None];
	"438:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee7e8a50>",
		def_var="['sign_a']",
		fillcolor=deepskyblue,
		label="438:AS
sign_a = op_a_i[31] & signed_mode_i[0];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_a_i', 'signed_mode_i']"];
	"438:AS" -> "444:AS";
	"438:AS" -> "464:AL";
	"438:AS" -> "445:AS";
	"440:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee7e8f50>",
		def_var="['op_a_ext']",
		fillcolor=deepskyblue,
		label="440:AS
op_a_ext = { sign_a, op_a_i };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sign_a', 'op_a_i']"];
	"438:AS" -> "440:AS";
	"440:AS" -> "464:AL";
	"437:AS" -> "401:AL";
	"436:AS" -> "401:AL";
	"408:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65eea86090>",
		fillcolor=turquoise,
		label="408:BL
alu_operand_a_o = { 32'h0, 1'b1 };
alu_operand_b_o = { ~op_b_i, 1'b1 };",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea9af90>, <pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65eea862d0>]",
		style=filled,
		typ=Block];
	"408:CA" -> "408:BL"	 [cond="[]",
		lineno=None];
	"439:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee7e8d50>",
		def_var="['sign_b']",
		fillcolor=deepskyblue,
		label="439:AS
sign_b = op_b_i[31] & signed_mode_i[1];",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['op_b_i', 'signed_mode_i']"];
	"439:AS" -> "444:AS";
	"439:AS" -> "464:AL";
	"441:AS"	 [ast="<pyverilog.vparser.ast.Assign object at 0x7f65ee806150>",
		def_var="['op_b_ext']",
		fillcolor=deepskyblue,
		label="441:AS
op_b_ext = { sign_b, op_b_i };",
		statements="[]",
		style=filled,
		typ=Assign,
		use_var="['sign_b', 'op_b_i']"];
	"439:AS" -> "441:AS";
	"424:CA" -> "424:BL"	 [cond="[]",
		lineno=None];
	"442:AS" -> "433:AS";
	"530:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f3ed0>",
		fillcolor=lightcyan,
		label="530:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"530:CA" -> "530:BL"	 [cond="[]",
		lineno=None];
	"551:CA" -> "551:BS"	 [cond="[]",
		lineno=None];
	"542:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee2f39d0>",
		fillcolor=lightcyan,
		label="542:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"542:CA" -> "542:BL"	 [cond="[]",
		lineno=None];
	"529:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65ee2f3a50>",
		fillcolor=linen,
		label="529:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"529:CS" -> "534:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=529];
	"529:CS" -> "538:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=529];
	"529:CS" -> "530:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=529];
	"529:CS" -> "542:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=529];
	"472:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65ee2efad0>",
		fillcolor=linen,
		label="472:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"471:IF" -> "472:CS"	 [cond="['mult_en_i', 'div_en_i']",
		label="(mult_en_i || div_en_i)",
		lineno=471];
	"472:CS" -> "554:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"472:CS" -> "508:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"472:CS" -> "555:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"472:CS" -> "498:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"472:CS" -> "547:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"472:CS" -> "503:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"473:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7fae50>",
		fillcolor=lightcyan,
		label="473:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"472:CS" -> "473:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"528:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f3d50>",
		fillcolor=lightcyan,
		label="528:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"472:CS" -> "528:CA"	 [cond="['md_state_q']",
		label=md_state_q,
		lineno=472];
	"408:BL" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"550:BS" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"406:BS" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"481:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7ebcd0>",
		fillcolor=lightcyan,
		label="481:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"481:CA" -> "481:BL"	 [cond="[]",
		lineno=None];
	"474:CS"	 [ast="<pyverilog.vparser.ast.CaseStatement object at 0x7f65ee803fd0>",
		fillcolor=linen,
		label="474:CS",
		statements="[]",
		style=filled,
		typ=CaseStatement];
	"474:CS" -> "491:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=474];
	"474:CS" -> "487:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=474];
	"474:CS" -> "481:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=474];
	"475:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7eb090>",
		fillcolor=lightcyan,
		label="475:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"474:CS" -> "475:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=474];
	"473:BL"	 [ast="<pyverilog.vparser.ast.Block object at 0x7f65ee7fae90>",
		fillcolor=turquoise,
		label="473:BL
multdiv_state_d = 5'd31;",
		statements="[<pyverilog.vparser.ast.BlockingSubstitution object at 0x7f65ee815490>]",
		style=filled,
		typ=Block];
	"473:CA" -> "473:BL"	 [cond="[]",
		lineno=None];
	"434:AS" -> "464:AL";
	"433:AS" -> "464:AL";
	"446:AL" -> "446:BL"	 [cond="[]",
		lineno=None];
	"511:CA"	 [ast="<pyverilog.vparser.ast.Case object at 0x7f65ee7f56d0>",
		fillcolor=lightcyan,
		label="511:CA",
		statements="[]",
		style=filled,
		typ=Case];
	"511:CA" -> "511:BL"	 [cond="[]",
		lineno=None];
	"404:CS" -> "407:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=404];
	"404:CS" -> "406:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=404];
	"404:CS" -> "405:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=404];
	"447:IF" -> "455:BL"	 [cond="['rst_ni']",
		label="!((!rst_ni))",
		lineno=447];
	"447:IF" -> "447:BL"	 [cond="['rst_ni']",
		label="(!rst_ni)",
		lineno=447];
	"510:CS" -> "521:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=510];
	"510:CS" -> "516:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=510];
	"510:CS" -> "511:CA"	 [cond="['operator_i']",
		label=operator_i,
		lineno=510];
	"435:AS" -> "437:AS";
	"435:AS" -> "436:AS";
	"516:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"534:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"401:AL" -> "401:BL"	 [cond="[]",
		lineno=None];
	"487:BL" -> "Leaf_464:AL"	 [cond="[]",
		lineno=None];
	"528:CA" -> "529:CS"	 [cond="[]",
		lineno=None];
	"412:BL" -> "Leaf_401:AL"	 [cond="[]",
		lineno=None];
	"475:CA" -> "475:BL"	 [cond="[]",
		lineno=None];
	"473:BL" -> "474:CS"	 [cond="[]",
		lineno=None];
	"441:AS" -> "464:AL";
}
